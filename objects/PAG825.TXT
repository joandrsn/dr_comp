OBJECT Page 825 DO Payment Connection Setup
{
  OBJECT-PROPERTIES
  {
    Date=09-09-14;
    Time=12:00:00;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    CaptionML=[DAN=Konfiguration af forbindelse til Microsoft Dynamics ERP Payment Services;
               ENU=Microsoft Dynamics ERP Payment Services Connection Setup];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table825;
    PageType=Card;
    OnOpenPage=BEGIN
                 CreateDefaultSetup;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 12      ;1   ;ActionGroup;
                      CaptionML=[DAN=Fu&nktioner;
                                 ENU=F&unctions];
                      Image=Action }
      { 13      ;2   ;Action    ;
                      Name=SignUpNowAction;
                      Ellipsis=Yes;
                      CaptionML=[DAN=Tilmeld dig nu;
                                 ENU=Sign up Now];
                      Image=SignUp;
                      OnAction=BEGIN
                                 SignUp;
                               END;
                                }
      { 14      ;2   ;Action    ;
                      Name=ManageAccountAction;
                      Ellipsis=Yes;
                      CaptionML=[DAN=Administrer konto;
                                 ENU=Manage Account];
                      Image=EditCustomer;
                      OnAction=BEGIN
                                 ManageAccount;
                               END;
                                }
      { 15      ;2   ;Action    ;
                      Name=DisassociateAccountAction;
                      Ellipsis=Yes;
                      CaptionML=[DAN=Fjern tilknytning til konto;
                                 ENU=Disassociate Account];
                      Image=UnLinkAccount;
                      OnAction=BEGIN
                                 Disassociate;
                                 MESSAGE(UnlinkMessage);
                               END;
                                }
      { 3       ;1   ;ActionGroup;
                      Name=EncryptionActionGroup;
                      CaptionML=[DAN=Kryptering;
                                 ENU=Encryption];
                      ActionContainerType=NewDocumentItems }
      { 5       ;2   ;Action    ;
                      Name=GenerateKeyAction;
                      CaptionML=[DAN=Generér nøgle;
                                 ENU=Generate Key];
                      Image=CreateDocument;
                      OnAction=BEGIN
                                 IF DOEncryptionMgt.HasKey THEN
                                   IF NOT CONFIRM(OverwriteExistingKeyWarning) THEN
                                     EXIT;

                                 DOEncryptionMgt.CreateKey;
                                 MESSAGE(KeyGeneratedMessage);
                               END;
                                }
      { 6       ;2   ;Action    ;
                      Name=DeleteKeyAction;
                      CaptionML=[DAN=Slet nøgle;
                                 ENU=Delete Key];
                      Image=Delete;
                      OnAction=BEGIN
                                 IF NOT DOEncryptionMgt.HasKey THEN
                                   ERROR(KeyDoesNotExistError);

                                 IF NOT CONFIRM(DeleteKeyWarning) THEN
                                   EXIT;

                                 DOEncryptionMgt.DeleteKey;
                                 MESSAGE(KeyDeletedMessage);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=ExportKeyAction;
                      CaptionML=[DAN=Hent nøgle;
                                 ENU=Download Key];
                      Image=Export;
                      OnAction=VAR
                                 FileMgt@1000 : Codeunit 419;
                                 StdPasswordDialog@1004 : Page 9815;
                                 ServerFilename@1001 : Text;
                                 ClientFilename@1002 : Text;
                                 PasswordText@1003 : Text;
                               BEGIN
                                 ServerFilename := FileMgt.ServerTempFileName('key');
                                 StdPasswordDialog.EnableBlankPassword(FALSE);
                                 IF StdPasswordDialog.RUNMODAL = ACTION::OK THEN
                                   PasswordText := StdPasswordDialog.GetPasswordValue
                                 ELSE
                                   EXIT;

                                 DOEncryptionMgt.Export(ServerFilename,PasswordText);
                                 ClientFilename := 'Encryption.key';
                                 IF DOWNLOAD(ServerFilename,'','','',ClientFilename) THEN;
                                 ERASE(ServerFilename);
                               END;
                                }
      { 8       ;2   ;Action    ;
                      Name=ImportKeyAction;
                      CaptionML=[DAN=Upload nøgle;
                                 ENU=Upload Key];
                      Image=Import;
                      OnAction=VAR
                                 StdPasswordDialog@1002 : Page 9815;
                                 ServerFilename@1000 : Text;
                                 PasswordText@1001 : Text;
                               BEGIN
                                 IF UPLOAD('','','','',ServerFilename) THEN BEGIN
                                   StdPasswordDialog.EnableBlankPassword(TRUE);
                                   IF StdPasswordDialog.RUNMODAL = ACTION::OK THEN
                                     PasswordText := StdPasswordDialog.GetPasswordValue
                                   ELSE
                                     EXIT;

                                   IF DOEncryptionMgt.HasKey THEN
                                     IF NOT CONFIRM(OverwriteExistingKeyWarning) THEN
                                       EXIT;

                                   DOEncryptionMgt.Import(ServerFilename,PasswordText);
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[DAN=Generelt;
                           ENU=General] }

    { 2   ;2   ;Field     ;
                SourceExpr=Active }

    { 4   ;2   ;Field     ;
                SourceExpr="Run in Test Mode" }

    { 17  ;2   ;Field     ;
                SourceExpr="Service ID" }

  }
  CODE
  {
    VAR
      DOEncryptionMgt@1000 : Codeunit 824;
      OverwriteExistingKeyWarning@1100 : TextConst 'DAN=Hvis du ændrer nøglen, bliver de eksisterende data muligvis ulæselige. Vil du fortsætte?;ENU=Changing the key may render existing data unreadable. Do you want to continue?';
      DeleteKeyWarning@1101 : TextConst 'DAN=Hvis du sletter nøglen, bliver de eksisterende data ulæselige. Vil du fortsætte?;ENU=Deleting the key will render existing data unreadable. Do you want to continue?';
      KeyDoesNotExistError@1001 : TextConst 'DAN=Krypteringsnøglen findes ikke.;ENU=Encryption key does not exist.';
      KeyDeletedMessage@1002 : TextConst 'DAN=Krypteringsnøglen er slettet.;ENU=Encryption key was successfully deleted.';
      KeyGeneratedMessage@1003 : TextConst 'DAN=Krypteringsnøglen er oprettet.;ENU=Encryption key was successfully generated.';
      UnlinkMessage@1004 : TextConst 'DAN=Fjernelse af tilknytning for konto udført.;ENU=Disassociation of the account has succeeded.';

    BEGIN
    END.
  }
}

