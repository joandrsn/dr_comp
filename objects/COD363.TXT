OBJECT Codeunit 363 PostSalesLines-Delete
{
  OBJECT-PROPERTIES
  {
    Date=30-08-18;
    Time=12:00:00;
    Version List=NAVW19.00.00.50583;
  }
  PROPERTIES
  {
    Permissions=TableData 111=rd,
                TableData 113=d,
                TableData 115=d,
                TableData 6661=rd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SalesShptLine@1000 : Record 111;
      SalesInvLine@1001 : Record 113;
      SalesCrMemoLine@1002 : Record 115;
      SalesRcptLine@1003 : Record 6661;
      ItemTrackingMgt@1004 : Codeunit 6500;
      MoveEntries@1005 : Codeunit 361;
      DocumentDeletionErr@1006 : TextConst '@@@=%1 - Posting Date;DAN=Du kan ikke slette bogførte salgsdokumenter, der er bogført efter %1. \\Datoen er defineret af feltet Tillad sletning af dokument før i vinduet Opsætning af salg og tilgodehavender.;ENU=You cannot delete posted sales documents that are posted after %1. \\The date is defined by the Allow Document Deletion Before field in the Sales and Receivables window.';

    PROCEDURE DeleteSalesShptLines@1(SalesShptHeader@1000 : Record 110);
    BEGIN
      SalesShptLine.SETRANGE("Document No.",SalesShptHeader."No.");
      IF SalesShptLine.FIND('-') THEN
        REPEAT
          SalesShptLine.TESTFIELD("Quantity Invoiced",SalesShptLine.Quantity);
          SalesShptLine.DELETE(TRUE);
        UNTIL SalesShptLine.NEXT = 0;
      ItemTrackingMgt.DeleteItemEntryRelation(
        DATABASE::"Sales Shipment Line",0,SalesShptHeader."No.",'',0,0,TRUE);

      MoveEntries.MoveDocRelatedEntries(DATABASE::"Sales Shipment Header",SalesShptHeader."No.");
    END;

    PROCEDURE DeleteSalesInvLines@2(SalesInvHeader@1000 : Record 112);
    BEGIN
      SalesInvLine.SETRANGE("Document No.",SalesInvHeader."No.");
      IF SalesInvLine.FIND('-') THEN
        REPEAT
          SalesInvLine.DELETE;
          ItemTrackingMgt.DeleteValueEntryRelation(SalesInvLine.RowID1);
        UNTIL SalesInvLine.NEXT = 0;

      MoveEntries.MoveDocRelatedEntries(DATABASE::"Sales Invoice Header",SalesInvHeader."No.");
    END;

    PROCEDURE DeleteSalesCrMemoLines@3(SalesCrMemoHeader@1000 : Record 114);
    BEGIN
      SalesCrMemoLine.SETRANGE("Document No.",SalesCrMemoHeader."No.");
      IF SalesCrMemoLine.FIND('-') THEN
        REPEAT
          SalesCrMemoLine.DELETE;
        UNTIL SalesCrMemoLine.NEXT = 0;
      ItemTrackingMgt.DeleteItemEntryRelation(
        DATABASE::"Sales Cr.Memo Line",0,SalesCrMemoHeader."No.",'',0,0,TRUE);

      MoveEntries.MoveDocRelatedEntries(DATABASE::"Sales Cr.Memo Header",SalesCrMemoHeader."No.");
    END;

    PROCEDURE DeleteSalesRcptLines@5800(ReturnRcptHeader@1000 : Record 6660);
    BEGIN
      SalesRcptLine.SETRANGE("Document No.",ReturnRcptHeader."No.");
      IF SalesRcptLine.FIND('-') THEN
        REPEAT
          SalesRcptLine.TESTFIELD("Quantity Invoiced",SalesRcptLine.Quantity);
          SalesRcptLine.DELETE;
        UNTIL SalesRcptLine.NEXT = 0;
      ItemTrackingMgt.DeleteItemEntryRelation(
        DATABASE::"Return Receipt Line",0,ReturnRcptHeader."No.",'',0,0,TRUE);

      MoveEntries.MoveDocRelatedEntries(DATABASE::"Return Receipt Header",ReturnRcptHeader."No.");
    END;

    PROCEDURE IsDocumentDeletionAllowed@4(PostingDate@1001 : Date);
    VAR
      SalesSetup@1000 : Record 311;
    BEGIN
      SalesSetup.GET;
      SalesSetup.TESTFIELD("Allow Document Deletion Before");
      IF PostingDate >= SalesSetup."Allow Document Deletion Before" THEN
        ERROR(STRSUBSTNO(DocumentDeletionErr,SalesSetup."Allow Document Deletion Before"));
    END;

    BEGIN
    END.
  }
}

