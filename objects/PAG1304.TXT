OBJECT Page 1304 Mini Sales Invoice
{
  OBJECT-PROPERTIES
  {
    Date=15-09-15;
    Time=12:00:00;
    Version List=NAVW19.00,NAVDK9.00;
  }
  PROPERTIES
  {
    CaptionML=[DAN=Salgsfaktura;
               ENU=Sales Invoice];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Invoice));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[DAN=Ny,Proces,Rapport,Faktura,Bogføring,Vis;
                                ENU=New,Process,Report,Invoice,Posting,View];
    OnInit=BEGIN
             ShowDetailsTab := FALSE;
             EnableActions;
             SellToCustomerUsesOIOUBL := CustomerUsesOIOUBL("Sell-to Customer No.")
           END;

    OnOpenPage=BEGIN
                 ShowBillToShipToTab := ("Sell-to Customer No." <> "Bill-to Customer No.") OR ("Sell-to Address" <> "Ship-to Address");
                 IF UserSetupManagement.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserSetupManagement.GetSalesFilter);
                   FILTERGROUP(0);
                 END;
                 DocumentIsPosted := FALSE;

                 IF OfficeHost.IsAvailable THEN BEGIN
                   OfficeHost := OfficeHost.Create;
                   IF OfficeHost.HostType = 'Outlook-ItemEdit' THEN
                     OutlookComposeFormAvailable := TRUE;
                   IF OfficeHost.HostType = 'Outlook-ItemRead' THEN
                     OutlookReadFormAvailable := TRUE;
                 END;
               END;

    OnNextRecord=VAR
                   Outcome@1001 : Integer;
                 BEGIN
                   Outcome := NEXT(Steps);
                   IF Outcome <> 0 THEN
                     ShowBillToShipToTab := ("Sell-to Customer No." <> "Bill-to Customer No.") OR ("Sell-to Address" <> "Ship-to Address");

                   EXIT(Outcome);
                 END;

    OnAfterGetRecord=BEGIN
                       CustomerSelected := "Sell-to Customer No." <> '';
                       EnableActions;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserSetupManagement.GetSalesFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(CONFIRM(ClosePageQst))
                     END;

    OnAfterGetCurrRecord=BEGIN
                           SellToCustomerUsesOIOUBL := CustomerUsesOIOUBL("Sell-to Customer No.");
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 57      ;1   ;ActionGroup;
                      Name=Invoice;
                      CaptionML=[DAN=&Faktura;
                                 ENU=&Invoice];
                      Image=Invoice }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[DAN=Kunde (Debitor);
                                 ENU=Customer];
                      ToolTipML=[DAN=Vis eller rediger detaljerede oplysninger om debitoren.;
                                 ENU=View or edit detailed information about the customer.];
                      RunObject=Page 1300;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=Yes;
                      Enabled=CustomerSelected;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category4 }
      { 2       ;2   ;Action    ;
                      Name=CreatePurchaseInvoice;
                      CaptionML=[DAN=Opret købsfaktura;
                                 ENU=Create Purchase Invoice];
                      Promoted=No;
                      PromotedIsBig=Yes;
                      Image=NewInvoice;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 SelectedSalesLine@1001 : Record 37;
                                 PurchInvFromSalesInvoice@1000 : Codeunit 1314;
                               BEGIN
                                 CurrPage.SalesLines.PAGE.SETSELECTIONFILTER(SelectedSalesLine);
                                 PurchInvFromSalesInvoice.CreatePurchaseInvoice(Rec,SelectedSalesLine);
                               END;
                                }
      { 134     ;2   ;Action    ;
                      Name=GetRecurringSalesLines;
                      Ellipsis=Yes;
                      CaptionML=[DAN=Hent tilbagevendende salgslinjer;
                                 ENU=Get Recurring Sales Lines];
                      ToolTipML=[DAN=Indsæt salgsdokumentlinjer, som du har angivet for kunden som tilbagevendende. Tilbagevendende salgslinjer kan være en månedlig genbestillingsordre eller en fast fragtudgift.;
                                 ENU=Insert sales document lines that you have set up for the customer as recurring. Recurring sales lines could be for a monthly replenishment order or a fixed freight expense.];
                      PromotedIsBig=Yes;
                      Image=CustomerCode;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 StdCustSalesCode@1000 : Record 172;
                               BEGIN
                                 TESTFIELD("No.");
                                 TESTFIELD("Sell-to Customer No.");

                                 StdCustSalesCode.FILTERGROUP := 2;
                                 StdCustSalesCode.SETRANGE("Customer No.","Sell-to Customer No.");
                                 StdCustSalesCode.FILTERGROUP := 0;

                                 IF PAGE.RUNMODAL(PAGE::"Mini Std Customer Sales Codes",StdCustSalesCode) = ACTION::LookupOK THEN
                                   StdCustSalesCode.ApplyStdCodesToSalesLines(Rec,StdCustSalesCode);
                               END;
                                }
      { 64      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[DAN=Kopiér linjer;
                                 ENU=Copy Document];
                      ToolTipML=[DAN=Kopiér linjer og sidehovedoplysninger fra et andet salgsdokument til dette dokument. Du kan kopiere en bogført salgsfaktura til en ny salgsfaktura, hvis du hurtigt vil oprette et lignende dokument.;
                                 ENU=Copy document lines and header information from another sales document to this document. You can copy a posted sales invoice into a new sales invoice to quickly create a similar document.];
                      PromotedIsBig=Yes;
                      Image=CopyDocument;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                               END;
                                }
      { 23      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[DAN=Dimensioner;
                                 ENU=Dimensions];
                      ToolTipML=[DAN=Vis eller rediger de dimensionsgrupper, der er oprettet til debitoren i salgsdokumentet.;
                                 ENU=View or edit the dimension sets that are set up for the customer on the sales document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 69      ;1   ;ActionGroup;
                      Name=Posting;
                      CaptionML=[DAN=&Bogføring;
                                 ENU=P&osting];
                      Image=Post }
      { 71      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[DAN=B&ogfør;
                                 ENU=P&ost];
                      ToolTipML=[DAN=Færdiggør salgsdokumentet. Ved bogføring opdateres kontiene med de beløb og mængder, der er angivet i dokumentet.;
                                 ENU=Finalize the sales document. Posting updates your books with the document's amounts and quantities.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)");
                               END;
                                }
      { 14      ;2   ;Action    ;
                      Name=PostAndSend;
                      Ellipsis=Yes;
                      CaptionML=[DAN=Bogfør og &send;
                                 ENU=Post and &Send];
                      ToolTipML=[DAN=Færdiggør og send salgsdokumentet.;
                                 ENU=Finalize and send the sales document.];
                      Promoted=Yes;
                      Visible=NOT (OutlookReadFormAvailable OR OutlookComposeFormAvailable);
                      PromotedIsBig=Yes;
                      Image=PostSendTo;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 DocumentIsPosted := TRUE;
                                 SendToPosting(CODEUNIT::"Sales-Post and Send");
                                 DocumentIsPosted := TRUE;
                               END;
                                }
      { 1001    ;2   ;Action    ;
                      Name=Printer;
                      Ellipsis=Yes;
                      CaptionML=[DAN=&Udskriv;
                                 ENU=&Print];
                      ToolTipML=[DAN=Færdiggør og udskriv salgsdokumentet.;
                                 ENU=Finalize and print the sales document.];
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 PostAndPrint(CODEUNIT::"Sales-Post");
                               END;
                                }
      { 1002    ;2   ;Action    ;
                      Name=Email as PDF;
                      Ellipsis=Yes;
                      CaptionML=[DAN=&Mail;
                                 ENU=&Email];
                      ToolTipML=[DAN=Færdiggør og vedhæft salgsdokumentet i en mail til debitoren.;
                                 ENU=Finalize and attach the sales document to an email to the customer.];
                      Visible=NOT (OutlookReadFormAvailable OR OutlookComposeFormAvailable);
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post + Email");
                               END;
                                }
      { 1060003 ;2   ;Action    ;
                      Name=OIOUBL;
                      CaptionML=[DAN=&OIOUBL;
                                 ENU=&OIOUBL];
                      Promoted=Yes;
                      Enabled=EnableXMLFileAction;
                      PromotedIsBig=Yes;
                      Image=Export;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post + XML File");
                               END;
                                }
      { 35      ;2   ;Action    ;
                      Name=PostAndAttach;
                      CaptionML=[DAN=Bogfør og vedhæft;
                                 ENU=Post and Attach];
                      Promoted=Yes;
                      Visible=OutlookReadFormAvailable OR OutlookComposeFormAvailable;
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TempBlob@1000 : Record 99008535;
                                 SalesInvoiceHeader@1001 : Record 112;
                                 ReportDistributionManagement@1002 : Codeunit 452;
                                 PreAssignedNo@1003 : Code[20];
                               BEGIN
                                 MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
                                 PreAssignedNo := "No.";
                                 SendToPosting(CODEUNIT::"Sales-Post (Yes/No)");

                                 IF SalesInvoiceHeader.GET(PreAssignedNo) THEN BEGIN
                                   SalesInvoiceHeader.SETRECFILTER;
                                   COMMIT;
                                 END;

                                 ReportDistributionManagement.GetReportPDFAsBlob(SalesInvoiceHeader,TempBlob);

                                 IF OutlookReadFormAvailable THEN
                                   OfficeHost.InvokeExtensionAsync('replyWithAttachment',TempBlob.Blob,'Invoice.pdf');
                                 IF OutlookComposeFormAvailable THEN
                                   OfficeHost.InvokeExtensionAsync('AddAttachmentRest',TempBlob.Blob,'Invoice.pdf');
                               END;
                                }
      { 17      ;2   ;Action    ;
                      CaptionML=[DAN=Vis bogføring;
                                 ENU=Preview Posting];
                      Image=ViewPostedOrder;
                      OnAction=BEGIN
                                 ShowPreview;
                               END;
                                }
      { 3       ;1   ;ActionGroup;
                      Name=View;
                      CaptionML=[DAN=Vis;
                                 ENU=View] }
      { 4       ;2   ;Action    ;
                      Name=Bill-to and Ship-to Address;
                      CaptionML=[DAN=Leveringsadresse og faktureringsadresse;
                                 ENU=Ship-to and Bill-to Address];
                      ToolTipML=[DAN=Vis felter til kundens leverings- og faktureringsadresser. Du kan angive en anden adresse, som varen eller servicen skal leveres til, eller angive en anden adresse, som dokumentet skal sendes til.;
                                 ENU=Show fields for the customer's shipping and billing addresses. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShipAddress;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowBillToShipToTab := NOT ShowBillToShipToTab;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=InvoiceDetails;
                      CaptionML=[DAN=Fakturadetaljer;
                                 ENU=Invoice Details];
                      ToolTipML=[DAN=Vis felter til fakturaoplysninger, f.eks. valuta, afsendelsesdato og betalingsbetingelser. Du kan angive beløb i dette salgsdokument i en anden valuta end den lokale valuta.;
                                 ENU=Show fields for invoice details, such as currency, shipment date, and payment terms. You can specify a currency that is different than your local currency for amounts on this sales document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=TaxDetail;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowDetailsTab := NOT ShowDetailsTab;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=SalesInvoice;
                CaptionML=[DAN=Salgsfaktura;
                           ENU=Sales Invoice];
                GroupType=Group }

    { 13  ;2   ;Group     ;
                GroupType=Group }

    { 6   ;3   ;Field     ;
                CaptionML=[DAN=Debitornavn;
                           ENU=Customer Name];
                ToolTipML=[DAN=Angiver navnet på den kunde, der modtager produkterne og faktureres som standard. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies the name of the customer who will receive the products and be billed by default. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                NotBlank=Yes;
                SourceExpr="Sell-to Customer Name";
                OnValidate=BEGIN
                             IF MiniCustomerMgt.ValidateSellToCustomer(Rec,xRec) THEN
                               CurrPage.UPDATE;

                             EnableActions;
                             SellToCustomerUsesOIOUBL := CustomerUsesOIOUBL("Sell-to Customer No.");
                           END;

                OnLookup=BEGIN
                           IF MiniCustomerMgt.LookupSellToCustomer(Rec,xRec) THEN
                             CurrPage.UPDATE;
                         END;

                ShowMandatory=TRUE }

    { 75  ;3   ;Field     ;
                CaptionML=[DAN=Adresse;
                           ENU=Address];
                ToolTipML=[DAN=Angiver adressen på kundens lokalitet. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies the address where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Address" }

    { 11  ;3   ;Field     ;
                CaptionML=[DAN=Adresse 2;
                           ENU=Address 2];
                ToolTipML=[DAN=Angiver en supplerende del af kundens adresse. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies an additional part of the address where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Address 2" }

    { 80  ;3   ;Field     ;
                CaptionML=[DAN=Postnr.;
                           ENU=Post Code];
                ToolTipML=[DAN=Angiver postnummeret på kundens lokalitet. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies the post code where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Post Code" }

    { 79  ;3   ;Field     ;
                CaptionML=[DAN=By;
                           ENU=City];
                ToolTipML=[DAN=Angiver navnet på den by, hvor debitoren har til huse. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies the name of the city where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to City" }

    { 15  ;2   ;Group     ;
                GroupType=Group }

    { 8   ;3   ;Field     ;
                CaptionML=[DAN=Kontakt;
                           ENU=Contact];
                ToolTipML=[DAN=Angiver navnet på personen, der kan kontaktes i kundens virksomhed. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies the name of the person to contact at the customer. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Contact";
                ShowMandatory=SellToCustomerUsesOIOUBL }

    { 43  ;3   ;Field     ;
                ToolTipML=[DAN=Angiver den dato, hvor du oprettede salgsdokumentet. Datoen vises på det udskrevne salgsdokument. Som standard angives dags dato.;
                           ENU=Specifies the date on which you create the sales document. The date will appear on the printed sales document. By default, today's date is entered.];
                SourceExpr="Document Date" }

    { 12  ;3   ;Field     ;
                ToolTipML=[DAN=Angiver den dato, hvor bogføringen af salgsdokumentet skal registreres. Som standard angives dags dato.;
                           ENU=Specifies the date when the posting of the sales document will be recorded. By default, today's date is entered.];
                SourceExpr="Posting Date";
                Importance=Promoted }

    { 28  ;3   ;Field     ;
                ToolTipML=[DAN=Angiver, hvornår salgsfakturaen skal betales. Som standard beregnes feltet som datoen i feltet Afsendelsesdato plus den periode, der er defineret i feltet Betalingsbeting.kode.;
                           ENU=Specifies when the sales invoice must be paid. By default, the field is calculated as the date in the Shipment Date field plus the period defined in the Payment Terms Code field.];
                SourceExpr="Due Date";
                Importance=Promoted }

    { 1060004;3;Field     ;
                ToolTipML=[DAN=Viser kundens momsregistreringsnummer.;
                           ENU=Shows the customer's VAT registration number.];
                SourceExpr="VAT Registration No." }

    { 1060000;2;Group     ;
                Name=OIOUBL invoicing;
                CaptionML=[DAN=OIOUBL-fakturering;
                           ENU=OIOUBL invoicing];
                GroupType=Group }

    { 1060001;3;Field     ;
                ToolTipML=[DAN=Angiver nummeret, som debitoren anvender i deres eget system til at henvise til dette salgsdokument. Du kan udfylde dette felt og bruge det senere til at søge efter salgslinjer ved hjælp af kundens ordrenummer.;
                           ENU=Specifies the number that the customer uses in their own system to refer to this sales document. You can fill this field to use it later to search for sales lines using the customer's order number.];
                SourceExpr="External Document No.";
                ShowMandatory=SellToCustomerUsesOIOUBL }

    { 1060002;3;Field     ;
                ToolTipML=[DAN=Angiver Offentlig Information Online UBL (OIOUBL)-betalingsmetoden for dokumentet.;
                           ENU=Specifies the Offentlig Information Online UBL (OIOUBL) payment method for the document.];
                OptionCaptionML=[DAN=" ,,Kontooverførsel,National transaktion,Direct Debit";
                                 ENU=" ,,Account Transfer,National Clearing,Direct Debit"];
                BlankZero=Yes;
                SourceExpr="Payment Channel";
                ShowMandatory=SellToCustomerUsesOIOUBL }

    { 7   ;1   ;Group     ;
                Name=InvoiceDetails;
                CaptionML=[DAN=Fakturadetaljer;
                           ENU=Invoice Details];
                Visible=ShowDetailsTab;
                GroupType=Group }

    { 107 ;2   ;Field     ;
                ToolTipML=[DAN=Angiver valutaen for beløbene i salgsdokumentet. Som standard udfyldes feltet med værdien i feltet Valutakode på debitorkortet.;
                           ENU=Specifies the currency of amounts on the sales document. By default, the field is filled with the value in the Currency Code field on the customer card.];
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 33  ;2   ;Field     ;
                ToolTipML=[DAN=Viser den dato, hvor varerne forventes sendt, på salgsdokumentet. Som standard angives dags dato.;
                           ENU=Specifies the date you expect to ship items on the sales document. By default, today's date is entered.];
                SourceExpr="Shipment Date" }

    { 112 ;2   ;Field     ;
                ToolTipML=[DAN=Angiver, om dokumentet er åbent, venter på godkendelse, er faktureret til forudbetaling eller er frigivet til næste fase i behandlingen.;
                           ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.];
                SourceExpr=Status;
                Importance=Promoted;
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver nummeret på salgstilbuddet, salgsordren blev oprettet fra. Du kan spore nummeret til salgstilbudsdokumenter, som du har udskrevet, gemt eller sendt pr. mail.;
                           ENU=Specifies the number of the sales quote that the sales order was created from. You can track the number to sales quote documents that you have printed, saved, or emailed.];
                SourceExpr="Quote No." }

    { 121 ;2   ;Field     ;
                ToolTipML=[DAN=Angiver, om enhedsprisen på linjen skal vises med eller uden moms.;
                           ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.];
                SourceExpr="Prices Including VAT";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             CALCFIELDS("Invoice Discount Amount");
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount("Invoice Discount Amount",Rec);
                           END;
                            }

    { 156 ;2   ;Field     ;
                ToolTipML=[DAN=Angiver debitorens momsspecifikation for at knytte transaktioner, der er foretaget for denne debitor, til den relevante finanskonto i overensstemmelse med momsbogføringsopsætningen.;
                           ENU=Specifies the customer's VAT specification to link transactions made for this customer with the appropriate general ledger account according to the VAT posting setup.];
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 26  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver en formel, der beregner betalingens forfaldsdato, kontantrabatdato og kontantrabatbeløb på salgsdokumentet. Som standard angives betalingsvilkårene fra debitorkortet.;
                           ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document. By default, the payment term from the customer card is entered.];
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 101 ;2   ;Field     ;
                ToolTipML=[DAN=Angiver, hvordan betaling af salgsdokumentet skal sendes, som f.eks. bankoverførsel eller check. Som standard angives betalingsformen fra debitorkortet.;
                           ENU=Specifies how payment for the sales document must be submitted, such as bank transfer or check. By default, the payment method from the customer card is entered.];
                SourceExpr="Payment Method Code" }

    { 10  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver nummeret for transaktionstypen med henblik på rapportering til INTRASTAT.;
                           ENU=Specifies the number for the transaction type, for the purpose of reporting to INTRASTAT.];
                SourceExpr="Transaction Type" }

    { 1905885101;1;Group  ;
                Name=BilltoandShiptoAddresses;
                CaptionML=[DAN=Leverings- og faktureringsadresser;
                           ENU=Ship-to and Bill-to Addresses];
                Visible=ShowBillToShipToTab;
                GroupType=Group }

    { 34  ;2   ;Group     ;
                Name=Shiptoaddress;
                CaptionML=[DAN=Leveringsadresse;
                           ENU=Ship-to Address];
                GroupType=Group }

    { 31  ;3   ;Field     ;
                CaptionML=[DAN=Adressekode;
                           ENU=Address Code];
                ToolTipML=[DAN=Angiver koden for en anden leveringsadresse end kundens egen adresse, som angives som standard. Hvis du vil sende produkter i et salgsdokument til en anden adresse, skal du klikke på knappen i feltet Leveringsadressekode og vælge en kode, der repræsenterer leveres til en leveringsadresse.;
                           ENU=Specifies the code for another shipment address than the customer's own address, which is entered by default. To ship products on the sales document to another address, choose the button in the Ship-to Code field and select a code that represents a ship-to address.];
                SourceExpr="Ship-to Code";
                Importance=Promoted }

    { 30  ;3   ;Field     ;
                CaptionML=[DAN=Navn;
                           ENU=Name];
                ToolTipML=[DAN=Angiver navnet, som produkter i salgsdokumentet skal leveres til. Som standard udfyldes feltet med værdien i feltet Navn på debitorkortet eller med værdien i feltet Navn i vinduet Leveringsadresse.;
                           ENU=Specifies the name that products on the sales document will be shipped to. By default, the field is filled with the value in the Name field on the customer card or with the value in the Name field in the Ship-to Address window.];
                SourceExpr="Ship-to Name" }

    { 29  ;3   ;Field     ;
                CaptionML=[DAN=Adresse;
                           ENU=Address];
                ToolTipML=[DAN=Angiver den adresse, som produkter i salgsdokumentet skal leveres til. Som standard udfyldes feltet med værdien i feltet Adresse på debitorkortet eller med værdien i feltet Adresse i vinduet Leveringsadresse.;
                           ENU=Specifies the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Address field on the customer card or with the value in the Address field in the Ship-to Address window.];
                SourceExpr="Ship-to Address" }

    { 27  ;3   ;Field     ;
                CaptionML=[DAN=Adresse 2;
                           ENU=Address 2];
                ToolTipML=[DAN=Angiver den anden del af den adresse, som produkter i salgsdokumentet skal leveres til. Som standard udfyldes feltet med værdien i feltet Adresse 2 på debitorkortet eller med værdien i feltet Adresse 2 i vinduet Leveringsadresse.;
                           ENU=Specifies the second part of the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Address 2 field on the customer card or with the value in the Address 2 field in the Ship-to Address window.];
                SourceExpr="Ship-to Address 2" }

    { 25  ;3   ;Field     ;
                CaptionML=[DAN=Postnr.;
                           ENU=Post Code];
                ToolTipML=[DAN=Angiver postnummeret for leveringsadressen for debitoren.;
                           ENU=Specifies the post code of the customer's shipping address.];
                SourceExpr="Ship-to Post Code" }

    { 21  ;3   ;Field     ;
                CaptionML=[DAN=By;
                           ENU=City];
                ToolTipML=[DAN=Angiver bynavnet i den adresse, som produkter i salgsdokumentet skal leveres til. Som standard udfyldes feltet med værdien i feltet By på debitorkortet eller med værdien i feltet By i vinduet Leveringsadresse.;
                           ENU=Specifies the city name of the address that products on the sales document will be shipped to. By default, the field is filled with the value in the City field on the customer card or with the value in the City field in the Ship-to Address window.];
                SourceExpr="Ship-to City" }

    { 20  ;3   ;Field     ;
                CaptionML=[DAN=Kontakt;
                           ENU=Contact];
                ToolTipML=[DAN=Angiver navnet på kontaktpersonen på den adresse, som produkter i salgsdokumentet skal leveres til. Som standard udfyldes feltet med værdien i feltet Primærkontaktnr. på debitorkortet.;
                           ENU=Specifies the name of the contact person at the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Primary Contact No. field on the customer card.];
                SourceExpr="Ship-to Contact" }

    { 19  ;2   ;Group     ;
                Name=BilltoCustomer;
                CaptionML=[DAN=Faktureres til debitor;
                           ENU=Bill-to Customer];
                GroupType=Group }

    { 16  ;3   ;Field     ;
                CaptionML=[DAN=Navn;
                           ENU=Name];
                ToolTipML=[DAN=Angiver den debitor, du vil sende salgsfakturaen til, når det er til en anden debitor end den, du sælger til. Som standard angives navnet og adressen på den debitor, du sælger til.;
                           ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to. By default, the name and address of the customer that you are selling to is entered.];
                SourceExpr="Bill-to Name";
                OnValidate=BEGIN
                             IF MiniCustomerMgt.ValidateBillToCustomer(Rec,xRec) THEN
                               CurrPage.UPDATE;

                             EnableActions;
                           END;

                OnLookup=BEGIN
                           IF MiniCustomerMgt.LookupBillToCustomer(Rec,xRec) THEN
                             CurrPage.UPDATE;
                         END;
                          }

    { 18  ;3   ;Field     ;
                CaptionML=[DAN=Adresse;
                           ENU=Address];
                ToolTipML=[DAN=Angiver kundens adresse, som du vil sende fakturaen til.;
                           ENU=Specifies the address of the customer that you will send the invoice to.];
                SourceExpr="Bill-to Address" }

    { 9   ;3   ;Field     ;
                CaptionML=[DAN=Adresse 2;
                           ENU=Address 2];
                ToolTipML=[DAN=Indeholder en supplerende del af adressen på den debitor, som fakturaen bliver sendt til.;
                           ENU=Contains another line of the address of the customer that you will send the invoice to.];
                SourceExpr="Bill-to Address 2" }

    { 85  ;3   ;Field     ;
                CaptionML=[DAN=Postnr.;
                           ENU=Post Code];
                ToolTipML=[DAN=Angiver postnummeret for faktureringsadressen for debitoren.;
                           ENU=Specifies the post code of the customer's billing address.];
                SourceExpr="Bill-to Post Code" }

    { 22  ;3   ;Field     ;
                CaptionML=[DAN=By;
                           ENU=City];
                ToolTipML=[DAN=Angiver bynavnet på kunden, som fakturaen sendes til.;
                           ENU=Specifies the city name of the customer that you will send the invoice to.];
                SourceExpr="Bill-to City" }

    { 24  ;3   ;Field     ;
                CaptionML=[DAN=Kontakt;
                           ENU=Contact];
                ToolTipML=[DAN=Viser navnet på den person, du skal kontakte hos den debitor, som fakturaen bliver sendt til.;
                           ENU=Specifies the name of the person you should contact at the customer that you are sending the invoice to.];
                SourceExpr="Bill-to Contact" }

    { 56  ;1   ;Part      ;
                Name=SalesLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page1305 }

  }
  CODE
  {
    VAR
      CopySalesDoc@1000 : Report 292;
      UserSetupManagement@1004 : Codeunit 5700;
      MiniSalesCalcDiscByType@1002 : Codeunit 1300;
      MiniCustomerMgt@1003 : Codeunit 1302;
      MiniLinesInstructionMgt@1012 : Codeunit 1320;
      ChangeExchangeRate@1001 : Page 511;
      OfficeHost@1013 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Hosts.OfficeHost" RUNONCLIENT;
      ShowBillToShipToTab@1005 : Boolean;
      DocumentIsPosted@1010 : Boolean;
      ShowDetailsTab@1007 : Boolean;
      OpenPostedSalesInvQst@1006 : TextConst 'DAN=Fakturaen er blevet bogført og flyttet til listen Bogført salgsfaktura.\\Vil du åbne den bogførte faktura?;ENU=The invoice has been posted and moved to the Posted Sales Invoice list.\\Do you want to open the posted invoice?';
      EnableXMLFileAction@1060000 : Boolean;
      CustomerSelected@1008 : Boolean;
      ContasctMustnotbeBlankErr@1060001 : TextConst '@@@=Translation of term Contact should be identical to translation of caption of field "<Sell-to Contact>".;DAN=Angiv en værdi for Kontakt.;ENU=Please provide a value for Contact.';
      PostAndPrintQst@1011 : TextConst 'DAN=Vil du bogføre og udskrive fakturaen?;ENU=Do you want to post and print the invoice?';
      SellToCustomerUsesOIOUBL@1060002 : Boolean;
      ClosePageQst@1009 : TextConst 'DAN=Dette dokument er ikke bogført.\Vil du stadig afslutte?;ENU=This document is not posted.\Do you still want to leave?';
      OutlookComposeFormAvailable@1014 : Boolean;
      OutlookReadFormAvailable@1015 : Boolean;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      PreAssignedNo@1001 : Code[20];
    BEGIN
      VerifyOIOUBLSpecific;
      MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
      PreAssignedNo := "No.";
      SendToPosting(PostingCodeunitID);
      ShowPostedConfirmationMessage(PreAssignedNo);
    END;

    LOCAL PROCEDURE PostAndPrint@1(PostingCodeunitID@1000 : Integer);
    VAR
      SalesInvHeader@1001 : Record 112;
      DocumentNo@1002 : Code[20];
      PreAssignedNo@1003 : Code[20];
    BEGIN
      VerifyOIOUBLSpecific;
      MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);

      IF NOT CONFIRM(PostAndPrintQst,FALSE) THEN
        EXIT;

      PreAssignedNo := "No.";
      SendToPosting(PostingCodeunitID);

      IF "Last Posting No." = '' THEN
        DocumentNo := "No."
      ELSE
        DocumentNo := "Last Posting No.";

      IF SalesInvHeader.GET(DocumentNo) THEN BEGIN
        SalesInvHeader.SETRECFILTER;
        COMMIT;
        SalesInvHeader.PrintRecords(TRUE);
        ShowPostedConfirmationMessage(PreAssignedNo);
      END;
      DocumentIsPosted := TRUE;
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@7(PreAssignedNo@1001 : Code[20]);
    VAR
      SalesInvoiceHeader@1000 : Record 112;
    BEGIN
      SalesInvoiceHeader.SETRANGE("Pre-Assigned No.",PreAssignedNo);
      IF SalesInvoiceHeader.FINDFIRST THEN
        IF DIALOG.CONFIRM(OpenPostedSalesInvQst,FALSE) THEN
          PAGE.RUN(PAGE::"Mini Posted Sales Invoice",SalesInvoiceHeader);
      DocumentIsPosted := TRUE;
    END;

    LOCAL PROCEDURE EnableActions@1060000();
    BEGIN
      EnableXMLFileAction := "EAN No." <> '';
    END;

    LOCAL PROCEDURE VerifyOIOUBLSpecific@1060001();
    BEGIN
      IF "EAN No." <> '' THEN
        IF "Sell-to Contact" = '' THEN
          ERROR(ContasctMustnotbeBlankErr);
    END;

    LOCAL PROCEDURE CustomerUsesOIOUBL@1060002(CustomerNo@1060000 : Code[20]) : Boolean;
    VAR
      Customer@1060001 : Record 18;
    BEGIN
      IF Customer.GET(CustomerNo) THEN
        EXIT (Customer."OIOUBL Profile Code" <> '');
      EXIT(FALSE)
    END;

    LOCAL PROCEDURE ShowPreview@2();
    VAR
      SalesPostYesNo@1000 : Codeunit 81;
    BEGIN
      SalesPostYesNo.Preview(Rec);
    END;

    BEGIN
    END.
  }
}

