OBJECT Table 1107 Cost Allocation Target
{
  OBJECT-PROPERTIES
  {
    Date=15-09-15;
    Time=12:00:00;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               // Default value according to previous line
               "Allocation Target Type" := xRec."Allocation Target Type";
               IF xRec."Target Cost Type" <> '' THEN
                 "Target Cost Type" := xRec."Target Cost Type";

               Base := xRec.Base;
               "Last Date Modified" := TODAY;
               "User ID" := USERID;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
               "User ID" := USERID;
             END;

    CaptionML=[DAN=Omkostningsfordelingsmål;
               ENU=Cost Allocation Target];
    LookupPageID=Page1114;
    DrillDownPageID=Page1114;
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Code10        ;TableRelation="Cost Allocation Source";
                                                   CaptionML=[DAN=Id;
                                                              ENU=ID];
                                                   Editable=No }
    { 2   ;   ;Line No.            ;Integer       ;InitValue=0;
                                                   CaptionML=[DAN=Linjenr.;
                                                              ENU=Line No.];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 5   ;   ;Target Cost Type    ;Code20        ;TableRelation="Cost Type";
                                                   CaptionML=[DAN=Målomkostningstype;
                                                              ENU=Target Cost Type] }
    { 6   ;   ;Target Cost Center  ;Code20        ;TableRelation="Cost Center";
                                                   OnValidate=BEGIN
                                                                IF ("Target Cost Center" <> '') AND ("Target Cost Object" <> '') THEN
                                                                  ERROR(Text000);
                                                              END;

                                                   CaptionML=[DAN=Målomkostningssted;
                                                              ENU=Target Cost Center] }
    { 7   ;   ;Target Cost Object  ;Code20        ;TableRelation="Cost Object";
                                                   OnValidate=BEGIN
                                                                VALIDATE("Target Cost Center")
                                                              END;

                                                   CaptionML=[DAN=Målomkostningsemne;
                                                              ENU=Target Cost Object] }
    { 8   ;   ;Static Base         ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Static Weighting");
                                                              END;

                                                   CaptionML=[DAN=Statisk grundlag;
                                                              ENU=Static Base];
                                                   DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 9   ;   ;Static Weighting    ;Decimal       ;OnValidate=BEGIN
                                                                IF Base = Base::Static THEN BEGIN
                                                                  Share := "Static Base" * "Static Weighting";
                                                                  VALIDATE(Share);
                                                                END ELSE BEGIN
                                                                  IF "Static Base" > 0 THEN
                                                                    ERROR(Text001,"Static Base");
                                                                  IF "Static Weighting" > 0 THEN
                                                                    ERROR(Text001,"Static Weighting");
                                                                END;
                                                              END;

                                                   CaptionML=[DAN=Statisk vægtning;
                                                              ENU=Static Weighting];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 10  ;   ;Share               ;Decimal       ;OnValidate=BEGIN
                                                                CalcPercent;
                                                              END;

                                                   CaptionML=[DAN=Fordeling;
                                                              ENU=Share];
                                                   DecimalPlaces=2:5;
                                                   MinValue=0 }
    { 11  ;   ;Percent             ;Decimal       ;CaptionML=[DAN=Procent;
                                                              ENU=Percent];
                                                   DecimalPlaces=2:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 20  ;   ;Comment             ;Text50        ;CaptionML=[DAN=Bemærkning;
                                                              ENU=Comment] }
    { 30  ;   ;Base                ;Option        ;OnValidate=BEGIN
                                                                IF Base <> xRec.Base THEN BEGIN
                                                                  Share := 0;
                                                                  Percent := 0;
                                                                  "No. Filter" := '';
                                                                  "Group Filter" := '';
                                                                END;

                                                                IF Base = Base::Static THEN BEGIN
                                                                  "No. Filter" := '';
                                                                  "Cost Center Filter" := '';
                                                                  "Cost Object Filter" := '';
                                                                  "Date Filter Code" := 0;
                                                                  "Group Filter" := '';
                                                                END ELSE BEGIN
                                                                  "Static Base" := 0;
                                                                  "Static Weighting" := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[DAN=Grundlag;
                                                              ENU=Base];
                                                   OptionCaptionML=[DAN=Statisk,Finansposter,Finansbudgetposter,Omkostningstypeposter,Omkostningsbudgetposter,,,,,Antal medarbejdere,,Varer solgt (ant.),Varer købt (ant.),Varer solgt (beløb),Varer købt (beløb);
                                                                    ENU=Static,G/L Entries,G/L Budget Entries,Cost Type Entries,Cost Budget Entries,,,,,No of Employees,,Items Sold (Qty.),Items Purchased (Qty.),Items Sold (Amount),Items Purchased (Amount)];
                                                   OptionString=Static,G/L Entries,G/L Budget Entries,Cost Type Entries,Cost Budget Entries,,,,,No of Employees,,Items Sold (Qty.),Items Purchased (Qty.),Items Sold (Amount),Items Purchased (Amount) }
    { 31  ;   ;No. Filter          ;Text250       ;OnLookup=VAR
                                                              SelectionFilter@1000 : Text[1024];
                                                            BEGIN
                                                              IF LookupNoFilter(SelectionFilter) THEN
                                                                VALIDATE("No. Filter",COPYSTR(SelectionFilter,1,MAXSTRLEN("No. Filter")));
                                                            END;

                                                   CaptionML=[DAN=Nummerfilter;
                                                              ENU=No. Filter] }
    { 32  ;   ;Cost Center Filter  ;Text250       ;TableRelation="Cost Center";
                                                   OnLookup=VAR
                                                              CostCenter@1000 : Record 1112;
                                                              SelectionFilter@1001 : Text[1024];
                                                            BEGIN
                                                              IF CostCenter.LookupCostCenterFilter(SelectionFilter) THEN
                                                                VALIDATE("Cost Center Filter",COPYSTR(SelectionFilter,1,MAXSTRLEN("Cost Center Filter")));
                                                            END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[DAN=Omkostningsstedsfilter;
                                                              ENU=Cost Center Filter] }
    { 33  ;   ;Cost Object Filter  ;Text250       ;TableRelation="Cost Object";
                                                   OnLookup=VAR
                                                              CostObject@1001 : Record 1113;
                                                              SelectionFilter@1000 : Text[1024];
                                                            BEGIN
                                                              IF CostObject.LookupCostObjectFilter(SelectionFilter) THEN
                                                                VALIDATE("Cost Object Filter",COPYSTR(SelectionFilter,1,MAXSTRLEN("Cost Object Filter")));
                                                            END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[DAN=Omkostningsemnefilter;
                                                              ENU=Cost Object Filter] }
    { 34  ;   ;Date Filter Code    ;Option        ;CaptionML=[DAN=Datofilterkode;
                                                              ENU=Date Filter Code];
                                                   OptionCaptionML=[DAN=" ,Uge,Sidste uge,Måned,Sidste måned,Måned i sidste år,År,Sidste år,Periode,Sidste periode,Preriode i sidste år,Regnskabår,Sidste regnskabsår";
                                                                    ENU=" ,Week,Last Week,Month,Last Month,Month of Last Year,Year,Last Year,Period,Last Period,Period of Last Year,Fiscal Year,Last Fiscal Year"];
                                                   OptionString=[ ,Week,Last Week,Month,Last Month,Month of Last Year,Year,Last Year,Period,Last Period,Period of Last Year,Fiscal Year,Last Fiscal Year] }
    { 35  ;   ;Group Filter        ;Text250       ;OnLookup=VAR
                                                              SelectionFilter@1000 : Text[1024];
                                                            BEGIN
                                                              IF LookupGroupFilter(SelectionFilter) THEN
                                                                VALIDATE("Group Filter",COPYSTR(SelectionFilter,1,MAXSTRLEN("Group Filter")));
                                                            END;

                                                   CaptionML=[DAN=Gruppefilter;
                                                              ENU=Group Filter] }
    { 38  ;   ;Allocation Target Type;Option      ;OnValidate=BEGIN
                                                                IF "Allocation Target Type" <> xRec."Allocation Target Type" THEN BEGIN
                                                                  "Percent per Share" := 0;
                                                                  "Amount per Share" := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[DAN=Fordelingsmåltype;
                                                              ENU=Allocation Target Type];
                                                   OptionCaptionML=[DAN=Alle omkostninger,Procent pr. fordeling,Beløb pr. fordeling;
                                                                    ENU=All Costs,Percent per Share,Amount per Share];
                                                   OptionString=All Costs,Percent per Share,Amount per Share }
    { 40  ;   ;Percent per Share   ;Decimal       ;OnValidate=BEGIN
                                                                IF "Percent per Share" <> 0 THEN BEGIN
                                                                  "Allocation Target Type" := "Allocation Target Type"::"Percent per Share";
                                                                  "Amount per Share" := 0;
                                                                END ELSE
                                                                  "Allocation Target Type" := "Allocation Target Type"::"All Costs";
                                                              END;

                                                   CaptionML=[DAN=Procent pr. fordeling;
                                                              ENU=Percent per Share];
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 41  ;   ;Amount per Share    ;Decimal       ;OnValidate=BEGIN
                                                                IF "Amount per Share" <> 0 THEN BEGIN
                                                                  "Allocation Target Type" := "Allocation Target Type"::"Amount per Share";
                                                                  "Percent per Share" := 0;
                                                                END ELSE
                                                                  "Allocation Target Type" := "Allocation Target Type"::"All Costs";
                                                              END;

                                                   CaptionML=[DAN=Beløb pr. fordeling;
                                                              ENU=Amount per Share];
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 50  ;   ;Share Updated on    ;Date          ;CaptionML=[DAN=Fordeling opdateret den;
                                                              ENU=Share Updated on];
                                                   Editable=No }
    { 60  ;   ;Last Date Modified  ;Date          ;CaptionML=[DAN=Rettet den;
                                                              ENU=Last Date Modified];
                                                   Editable=No }
    { 61  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[DAN=Bruger-id;
                                                              ENU=User ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;ID,Line No.                             ;SumIndexFields=Share,Percent;
                                                   Clustered=Yes }
    {    ;Target Cost Type                         }
    {    ;Target Cost Center                       }
    {    ;Target Cost Object                       }
    {    ;ID,Allocation Target Type                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DAN=Du kan ikke både definere et omkostningssted og et omkostningsemne.;ENU=You cannot define both cost center and cost object.';
      Text001@1001 : TextConst 'DAN=%1 kan kun bruges i forbindelse med statiske allokeringer.;ENU=%1 can only be used with static allocations.';

    LOCAL PROCEDURE CalcPercent@1();
    VAR
      CostAllocationTarget@1002 : Record 1107;
      PctTotal@1000 : Decimal;
      TotalShare@1001 : Decimal;
    BEGIN
      WITH CostAllocationTarget DO BEGIN
        SETRANGE(ID,Rec.ID);
        SETFILTER("Line No.",'<>%1',Rec."Line No.");
        CALCSUMS(Share);
        TotalShare := Share + Rec.Share;

        IF TotalShare = 0 THEN BEGIN
          MODIFYALL(Percent,0);
          MODIFYALL("Share Updated on",TODAY);
          Rec.Percent := 0;
          Rec."Share Updated on" := TODAY;
          EXIT;
        END;

        IF FINDSET THEN
          REPEAT
            Percent := ROUND(100 * Share / TotalShare,0.00001);
            "Share Updated on" := TODAY;
            MODIFY;
          UNTIL NEXT = 0;
        Rec.Percent := ROUND(100 * Rec.Share / TotalShare,0.00001);
        Rec."Share Updated on" := TODAY;
        Rec.MODIFY;
        // distribute rounding error:
        CALCSUMS(Percent);
        PctTotal := Percent + Rec.Percent;
        IF PctTotal <> 100 THEN BEGIN
          IF (Rec."Line No." <> 0) AND FINDLAST AND ("Line No." > Rec."Line No.") THEN BEGIN
            Percent := Percent + (100 - PctTotal);
            MODIFY;
          END ELSE
            Rec.Percent := Rec.Percent + (100 - PctTotal);
        END;
      END;
    END;

    LOCAL PROCEDURE LookupNoFilter@2(VAR SelectionFilter@1000 : Text[1024]) : Boolean;
    VAR
      CostType@1001 : Record 1103;
    BEGIN
      CASE Base OF
        Base::"G/L Entries",
        Base::"G/L Budget Entries":
          EXIT(CostType.LookupGLAccFilter(SelectionFilter));
        Base::"Cost Type Entries",
        Base::"Cost Budget Entries":
          EXIT(CostType.LookupCostTypeFilter(SelectionFilter));
        Base::"Items Sold (Qty.)",
        Base::"Items Purchased (Qty.)",
        Base::"Items Sold (Amount)",
        Base::"Items Purchased (Amount)":
          EXIT(LookupItemFilter(SelectionFilter));
      END;
    END;

    LOCAL PROCEDURE LookupItemFilter@14(VAR SelectionFilter@1000 : Text[1024]) : Boolean;
    VAR
      ItemList@1001 : Page 31;
    BEGIN
      ItemList.LOOKUPMODE(TRUE);
      IF ItemList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        SelectionFilter := ItemList.GetSelectionFilter;
        EXIT(TRUE);
      END;
      EXIT(FALSE)
    END;

    LOCAL PROCEDURE LookupGroupFilter@4(VAR SelectionFilter@1000 : Text[1024]) : Boolean;
    BEGIN
      CASE Base OF
        Base::"G/L Budget Entries":
          EXIT(LookupGLBudgetFilter(SelectionFilter));
        Base::"Cost Budget Entries":
          EXIT(LookupCostBudgetFilter(SelectionFilter));
        Base::"Items Sold (Qty.)",
        Base::"Items Purchased (Qty.)",
        Base::"Items Sold (Amount)",
        Base::"Items Purchased (Amount)":
          EXIT(LookupInvtPostingGrFilter(SelectionFilter));
      END;
    END;

    LOCAL PROCEDURE LookupGLBudgetFilter@6(VAR SelectionFilter@1000 : Text[1024]) : Boolean;
    VAR
      GLBudgetNames@1001 : Page 121;
    BEGIN
      GLBudgetNames.LOOKUPMODE(TRUE);
      IF GLBudgetNames.RUNMODAL = ACTION::LookupOK THEN BEGIN
        SelectionFilter := GLBudgetNames.GetSelectionFilter;
        EXIT(TRUE);
      END;
      EXIT(FALSE)
    END;

    LOCAL PROCEDURE LookupCostBudgetFilter@7(VAR SelectionFilter@1000 : Text[1024]) : Boolean;
    VAR
      CostBudgetNames@1001 : Page 1116;
    BEGIN
      CostBudgetNames.LOOKUPMODE(TRUE);
      IF CostBudgetNames.RUNMODAL = ACTION::LookupOK THEN BEGIN
        SelectionFilter := CostBudgetNames.GetSelectionFilter;
        EXIT(TRUE);
      END;
      EXIT(FALSE)
    END;

    LOCAL PROCEDURE LookupInvtPostingGrFilter@8(VAR SelectionFilter@1000 : Text[1024]) : Boolean;
    VAR
      InvtPostingGroups@1001 : Page 112;
    BEGIN
      InvtPostingGroups.LOOKUPMODE(TRUE);
      IF InvtPostingGroups.RUNMODAL = ACTION::LookupOK THEN BEGIN
        SelectionFilter := InvtPostingGroups.GetSelectionFilter;
        EXIT(TRUE);
      END;
      EXIT(FALSE)
    END;

    BEGIN
    END.
  }
}

