OBJECT Table 1513 Notification Schedule
{
  OBJECT-PROPERTIES
  {
    Date=15-09-15;
    Time=12:00:00;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[DAN=Notifikationsplan;
               ENU=Notification Schedule];
    LookupPageID=Page1513;
    DrillDownPageID=Page1513;
  }
  FIELDS
  {
    { 1   ;   ;User ID             ;Code50        ;TableRelation="User Setup";
                                                   CaptionML=[DAN=Bruger-id;
                                                              ENU=User ID] }
    { 2   ;   ;Notification Type   ;Option        ;CaptionML=[DAN=Notifikationstype;
                                                              ENU=Notification Type];
                                                   OptionCaptionML=[DAN=Ny record,Godkendelse,Forfald;
                                                                    ENU=New Record,Approval,Overdue];
                                                   OptionString=New Record,Approval,Overdue }
    { 3   ;   ;Recurrence          ;Option        ;InitValue=Instantly;
                                                   CaptionML=[DAN=Gentagelse;
                                                              ENU=Recurrence];
                                                   OptionCaptionML=[DAN=Øjeblikkeligt,Dagligt,Ugentligt,Månedligt;
                                                                    ENU=Instantly,Daily,Weekly,Monthly];
                                                   OptionString=Instantly,Daily,Weekly,Monthly }
    { 4   ;   ;Time                ;Time          ;InitValue=12:00:00;
                                                   CaptionML=[DAN=Tidspunkt;
                                                              ENU=Time] }
    { 5   ;   ;Daily Frequency     ;Option        ;InitValue=Weekday;
                                                   OnValidate=BEGIN
                                                                UpdateDailyFrequency;
                                                              END;

                                                   CaptionML=[DAN=Daglig frekvens;
                                                              ENU=Daily Frequency];
                                                   OptionCaptionML=[DAN=Ugedag,Dagligt;
                                                                    ENU=Weekday,Daily];
                                                   OptionString=Weekday,Daily }
    { 6   ;   ;Monday              ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[DAN=Mandag;
                                                              ENU=Monday] }
    { 7   ;   ;Tuesday             ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[DAN=Tirsdag;
                                                              ENU=Tuesday] }
    { 8   ;   ;Wednesday           ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[DAN=Onsdag;
                                                              ENU=Wednesday] }
    { 9   ;   ;Thursday            ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[DAN=Torsdag;
                                                              ENU=Thursday] }
    { 10  ;   ;Friday              ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[DAN=Fredag;
                                                              ENU=Friday] }
    { 11  ;   ;Saturday            ;Boolean       ;CaptionML=[DAN=Lørdag;
                                                              ENU=Saturday] }
    { 12  ;   ;Sunday              ;Boolean       ;CaptionML=[DAN=Søndag;
                                                              ENU=Sunday] }
    { 13  ;   ;Date of Month       ;Integer       ;CaptionML=[DAN=Dato i måned;
                                                              ENU=Date of Month];
                                                   MinValue=1;
                                                   MaxValue=31 }
    { 14  ;   ;Monthly Notification Date;Option   ;CaptionML=[DAN=Månedlig notifikationsdato;
                                                              ENU=Monthly Notification Date];
                                                   OptionCaptionML=[DAN=Første arbejdsdag,Sidste arbejdsdag,Brugerdefineret;
                                                                    ENU=First Workday,Last Workday,Custom];
                                                   OptionString=First Workday,Last Workday,Custom }
  }
  KEYS
  {
    {    ;User ID,Notification Type               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE NewRecord@4(NewUserID@1000 : Code[50];NewNotificationType@1001 : Option);
    BEGIN
      INIT;
      "User ID" := NewUserID;
      "Notification Type" := NewNotificationType;

      INSERT;
    END;

    PROCEDURE ScheduledAt@3(DateTime@1000 : DateTime;LastUpdateDateTime@1002 : DateTime) : Boolean;
    VAR
      Date@1001 : Date;
    BEGIN
      Date := DT2DATE(DateTime);

      CASE Recurrence OF
        Recurrence::Instantly:
          EXIT(TRUE);
        Recurrence::Daily,
        Recurrence::Weekly:
          IF NotifyWeekday(Date) THEN
            IF (LastUpdateDateTime < CREATEDATETIME(Date,Time)) AND (DateTime >= CREATEDATETIME(Date,Time)) THEN
              EXIT(TRUE);
        Recurrence::Monthly:
          CASE "Monthly Notification Date" OF
            "Monthly Notification Date"::"First Workday":
              IF GetFirstWorkdateOfMonth(Date) = Date THEN
                IF (LastUpdateDateTime < CREATEDATETIME(Date,Time)) AND (DateTime >= CREATEDATETIME(Date,Time)) THEN
                  EXIT(TRUE);
            "Monthly Notification Date"::"Last Workday":
              IF GetLastWorkdateOfMonth(Date) = Date THEN
                IF (LastUpdateDateTime < CREATEDATETIME(Date,Time)) AND (DateTime >= CREATEDATETIME(Date,Time)) THEN
                  EXIT(TRUE);
            "Monthly Notification Date"::Custom:
              IF DATE2DMY(TODAY,1) = "Date of Month" THEN
                IF (LastUpdateDateTime < CREATEDATETIME(Date,Time)) AND (DateTime >= CREATEDATETIME(Date,Time)) THEN
                  EXIT(TRUE);
          END;
      END;
    END;

    LOCAL PROCEDURE NotifyWeekday@1(Date@1001 : Date) : Boolean;
    VAR
      Day@1000 : ',Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday';
    BEGIN
      CASE DATE2DWY(Date,1) OF
        Day::Monday:
          EXIT(Monday);
        Day::Tuesday:
          EXIT(Tuesday);
        Day::Wednesday:
          EXIT(Wednesday);
        Day::Thursday:
          EXIT(Thursday);
        Day::Friday:
          EXIT(Friday);
        Day::Saturday:
          EXIT(Saturday);
        Day::Sunday:
          EXIT(Sunday);
      END;
    END;

    LOCAL PROCEDURE UpdateDailyFrequency@8();
    BEGIN
      Monday := TRUE;
      Tuesday := TRUE;
      Wednesday := TRUE;
      Thursday := TRUE;
      Friday := TRUE;
      Saturday := "Daily Frequency" <> "Daily Frequency"::Weekday;
      Sunday := "Daily Frequency" <> "Daily Frequency"::Weekday;
    END;

    LOCAL PROCEDURE GetFirstWorkdateOfMonth@2(CurrentDate@1000 : Date) : Date;
    VAR
      Day@1002 : ',Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday';
    BEGIN
      IF DATE2DWY(CALCDATE('<-CM>',CurrentDate),1) IN [Day::Saturday,Day::Sunday] THEN
        EXIT(CALCDATE('<-CM+WD1>',CurrentDate));

      EXIT(CALCDATE('<-CM>',CurrentDate))
    END;

    LOCAL PROCEDURE GetLastWorkdateOfMonth@5(CurrentDate@1000 : Date) : Date;
    VAR
      Day@1002 : ',Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday';
    BEGIN
      IF DATE2DWY(CALCDATE('<+CM>',CurrentDate),1) IN [Day::Saturday,Day::Sunday] THEN
        EXIT(CALCDATE('<+CM-WD5>',CurrentDate));

      EXIT(CALCDATE('<+CM>',CurrentDate))
    END;

    BEGIN
    END.
  }
}

