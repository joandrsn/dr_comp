OBJECT Table 9186 Generic Chart Memo Buffer
{
  OBJECT-PROPERTIES
  {
    Date=22-02-18;
    Time=12:00:00;
    Version List=NAVW19.00.00.50087;
  }
  PROPERTIES
  {
    CaptionML=[DAN=Buffer for generisk diagrammemo;
               ENU=Generic Chart Memo Buffer];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Kode;
                                                              ENU=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Language Code       ;Code10        ;TableRelation=Language.Code;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Sprogkode;
                                                              ENU=Language Code];
                                                   NotBlank=Yes }
    { 4   ;   ;Language Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Language.Name WHERE (Code=FIELD(Language Code)));
                                                   CaptionML=[DAN=Sprognavn;
                                                              ENU=Language Name] }
    { 11  ;   ;Memo1               ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Memo1;
                                                              ENU=Memo1] }
    { 12  ;   ;Memo2               ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Memo2;
                                                              ENU=Memo2] }
    { 13  ;   ;Memo3               ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Memo3;
                                                              ENU=Memo3] }
    { 14  ;   ;Memo4               ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Memo4;
                                                              ENU=Memo4] }
    { 15  ;   ;Memo5               ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Memo5;
                                                              ENU=Memo5] }
    { 16  ;   ;Memo6               ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Memo6;
                                                              ENU=Memo6] }
    { 17  ;   ;Memo7               ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Memo7;
                                                              ENU=Memo7] }
    { 18  ;   ;Memo8               ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Memo8;
                                                              ENU=Memo8] }
    { 19  ;   ;Memo9               ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Memo9;
                                                              ENU=Memo9] }
    { 20  ;   ;Memo10              ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[DAN=Memo10;
                                                              ENU=Memo10] }
  }
  KEYS
  {
    {    ;Code,Language Code                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TextMemoToBeTruncatedMsg@1000 : TextConst 'DAN=Længden på den indtastede tekst er %1. Maksimumlængden er %2. Teksten er blevet afkortet til denne længde.;ENU=The length of the text that you entered is %1. The maximum length is %2. The text has been truncated to this length.';

    PROCEDURE GetMemo@2(CodeIn@1002 : Code[10];LanguageCode@1000 : Code[10]) : Text;
    BEGIN
      IF GET(CodeIn,LanguageCode) THEN
        EXIT(GetMemoText)
    END;

    PROCEDURE SetMemo@3(CodeIn@1003 : Code[10];LanguageCode@1000 : Code[10];MemoIn@1001 : Text);
    BEGIN
      IF GET(CodeIn,LanguageCode) THEN BEGIN
        SetMemoText(MemoIn);
        MODIFY
      END ELSE BEGIN
        Code := CodeIn;
        "Language Code" := LanguageCode;
        SetMemoText(MemoIn);
        INSERT
      END
    END;

    PROCEDURE GetMemoText@1() : Text;
    BEGIN
      EXIT(Memo1 + Memo2 + Memo3 + Memo4 + Memo5 + Memo6 + Memo7 + Memo8 + Memo9 + Memo10)
    END;

    PROCEDURE SetMemoText@5(MemoIn@1000 : Text);
    BEGIN
      IF STRLEN(MemoIn) > GetMaxMemoLength THEN BEGIN
        MESSAGE(TextMemoToBeTruncatedMsg,STRLEN(MemoIn),GetMaxMemoLength);
        MemoIn := COPYSTR(MemoIn,1,GetMaxMemoLength);
      END;

      Memo1 := COPYSTR(MemoIn,1,250);
      Memo2 := COPYSTR(MemoIn,251,250);
      Memo3 := COPYSTR(MemoIn,501,250);
      Memo4 := COPYSTR(MemoIn,751,250);
      Memo5 := COPYSTR(MemoIn,1001,250);
      Memo6 := COPYSTR(MemoIn,1251,250);
      Memo7 := COPYSTR(MemoIn,1501,250);
      Memo8 := COPYSTR(MemoIn,1751,250);
      Memo9 := COPYSTR(MemoIn,2001,250);
      Memo10 := COPYSTR(MemoIn,2251,250)
    END;

    LOCAL PROCEDURE GetMaxMemoLength@11() : Integer;
    BEGIN
      EXIT(2500);
    END;

    BEGIN
    END.
  }
}

