OBJECT Table 911 Posted Assembly Line
{
  OBJECT-PROPERTIES
  {
    Date=15-09-15;
    Time=12:00:00;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               AssemblyCommentLine@1000 : Record 906;
             BEGIN
               AssemblyCommentLine.SETRANGE("Document Type",AssemblyCommentLine."Document Type"::"Posted Assembly");
               AssemblyCommentLine.SETRANGE("Document No.","Document No.");
               AssemblyCommentLine.SETRANGE("Document Line No.","Line No.");
               IF NOT AssemblyCommentLine.ISEMPTY THEN
                 AssemblyCommentLine.DELETEALL;
             END;

    CaptionML=[DAN=Bogført montagelinje;
               ENU=Posted Assembly Line];
    LookupPageID=Page921;
    DrillDownPageID=Page921;
  }
  FIELDS
  {
    { 2   ;   ;Document No.        ;Code20        ;CaptionML=[DAN=Bilagsnr.;
                                                              ENU=Document No.] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[DAN=Linjenr.;
                                                              ENU=Line No.] }
    { 8   ;   ;Order No.           ;Code20        ;CaptionML=[DAN=Ordrenr.;
                                                              ENU=Order No.] }
    { 9   ;   ;Order Line No.      ;Integer       ;CaptionML=[DAN=Ordrelinjenr.;
                                                              ENU=Order Line No.] }
    { 10  ;   ;Type                ;Option        ;CaptionML=[DAN=Type;
                                                              ENU=Type];
                                                   OptionCaptionML=[DAN=" ,Vare,Ressource";
                                                                    ENU=" ,Item,Resource"];
                                                   OptionString=[ ,Item,Resource] }
    { 11  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource;
                                                   CaptionML=[DAN=Nummer;
                                                              ENU=No.] }
    { 12  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(No.),
                                                                                            Code=FIELD(Variant Code));
                                                   CaptionML=[DAN=Variantkode;
                                                              ENU=Variant Code] }
    { 13  ;   ;Description         ;Text50        ;CaptionML=[DAN=Beskrivelse;
                                                              ENU=Description] }
    { 14  ;   ;Description 2       ;Text50        ;CaptionML=[DAN=Beskrivelse 2;
                                                              ENU=Description 2] }
    { 18  ;   ;Lead-Time Offset    ;DateFormula   ;CaptionML=[DAN=Gennemløbstid;
                                                              ENU=Lead-Time Offset] }
    { 19  ;   ;Resource Usage Type ;Option        ;CaptionML=[DAN=Ressourceanvendelsestype;
                                                              ENU=Resource Usage Type];
                                                   OptionCaptionML=[DAN=" ,Direkte,Fast";
                                                                    ENU=" ,Direct,Fixed"];
                                                   OptionString=[ ,Direct,Fixed] }
    { 20  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[DAN=Lokationskode;
                                                              ENU=Location Code] }
    { 21  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[DAN=Genvejsdimension 1-kode;
                                                              ENU=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 22  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[DAN=Genvejsdimension 2-kode;
                                                              ENU=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 23  ;   ;Bin Code            ;Code20        ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[DAN=Placeringskode;
                                                              ENU=Bin Code] }
    { 25  ;   ;Position            ;Code10        ;CaptionML=[DAN=Position;
                                                              ENU=Position] }
    { 26  ;   ;Position 2          ;Code10        ;CaptionML=[DAN=Position 2;
                                                              ENU=Position 2] }
    { 27  ;   ;Position 3          ;Code10        ;CaptionML=[DAN=Position 3;
                                                              ENU=Position 3] }
    { 39  ;   ;Item Shpt. Entry No.;Integer       ;CaptionML=[DAN=Varelev.postløbenr.;
                                                              ENU=Item Shpt. Entry No.] }
    { 40  ;   ;Quantity            ;Decimal       ;CaptionML=[DAN=Antal;
                                                              ENU=Quantity];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 41  ;   ;Quantity (Base)     ;Decimal       ;CaptionML=[DAN=Antal (basis);
                                                              ENU=Quantity (Base)];
                                                   DecimalPlaces=0:5 }
    { 52  ;   ;Due Date            ;Date          ;CaptionML=[DAN=Forfaldsdato;
                                                              ENU=Due Date] }
    { 60  ;   ;Quantity per        ;Decimal       ;CaptionML=[DAN=Antal pr.;
                                                              ENU=Quantity per];
                                                   DecimalPlaces=0:5 }
    { 61  ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[DAN=Antal pr. enhed;
                                                              ENU=Qty. per Unit of Measure];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 62  ;   ;Inventory Posting Group;Code10     ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[DAN=Varebogføringsgruppe;
                                                              ENU=Inventory Posting Group] }
    { 63  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DAN=Produktbogføringsgruppe;
                                                              ENU=Gen. Prod. Posting Group] }
    { 65  ;   ;Unit Cost           ;Decimal       ;CaptionML=[DAN=Kostpris;
                                                              ENU=Unit Cost];
                                                   AutoFormatType=2 }
    { 67  ;   ;Cost Amount         ;Decimal       ;CaptionML=[DAN=Kostbeløb;
                                                              ENU=Cost Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 80  ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE IF (Type=CONST(Resource)) "Resource Unit of Measure".Code WHERE (Resource No.=FIELD(No.));
                                                   CaptionML=[DAN=Enhedskode;
                                                              ENU=Unit of Measure Code] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[DAN=Dimensionsgruppe-id;
                                                              ENU=Dimension Set ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;Clustered=Yes }
    {    ;Order No.,Order Line No.                 }
    {    ;Type,No.                                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE ShowDimensions@30();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Document No."));
    END;

    PROCEDURE ShowItemTrackingLines@1();
    VAR
      ItemTrackingDocMgt@1000 : Codeunit 6503;
    BEGIN
      ItemTrackingDocMgt.ShowItemTrackingForShptRcptLine(DATABASE::"Posted Assembly Line",0,"Document No.",'',0,"Line No.");
    END;

    PROCEDURE GetAssemblyLinesForDocument@2(VAR TempPostedAssemblyLine@1000 : TEMPORARY Record 911;ValueEntryDocType@1001 : Option;DocNo@1002 : Code[20];DocLineNo@1003 : Integer);
    VAR
      ValueEntry@1008 : Record 5802;
      ItemLedgerEntry@1007 : Record 32;
      PostedAsmHeader@1006 : Record 910;
      PostedAsmLine@1005 : Record 911;
      SalesShipmentLine@1004 : Record 111;
    BEGIN
      TempPostedAssemblyLine.RESET;
      TempPostedAssemblyLine.DELETEALL;
      ValueEntry.SETRANGE("Document Type",ValueEntryDocType);
      ValueEntry.SETRANGE("Document No.",DocNo);
      ValueEntry.SETRANGE("Document Line No.",DocLineNo);
      IF NOT ValueEntry.FINDSET THEN
        EXIT;
      REPEAT
        IF ItemLedgerEntry.GET(ValueEntry."Item Ledger Entry No.") THEN
          IF ItemLedgerEntry."Document Type" = ItemLedgerEntry."Document Type"::"Sales Shipment" THEN BEGIN
            SalesShipmentLine.GET(ItemLedgerEntry."Document No.",ItemLedgerEntry."Document Line No.");
            IF SalesShipmentLine.AsmToShipmentExists(PostedAsmHeader) THEN BEGIN
              PostedAsmLine.SETRANGE("Document No.",PostedAsmHeader."No.");
              IF PostedAsmLine.FINDSET THEN
                REPEAT
                  TempPostedAssemblyLine.SETRANGE(Type,PostedAsmLine.Type);
                  TempPostedAssemblyLine.SETRANGE("No.",PostedAsmLine."No.");
                  TempPostedAssemblyLine.SETRANGE("Variant Code",PostedAsmLine."Variant Code");
                  TempPostedAssemblyLine.SETRANGE(Description,PostedAsmLine.Description);
                  TempPostedAssemblyLine.SETRANGE("Unit of Measure Code",PostedAsmLine."Unit of Measure Code");
                  IF TempPostedAssemblyLine.FINDFIRST THEN BEGIN
                    TempPostedAssemblyLine.Quantity += PostedAsmLine.Quantity;
                    TempPostedAssemblyLine.MODIFY;
                  END ELSE BEGIN
                    TempPostedAssemblyLine := PostedAsmLine;
                    TempPostedAssemblyLine.INSERT;
                  END;
                UNTIL PostedAsmLine.NEXT = 0;
            END;
          END;
      UNTIL ValueEntry.NEXT = 0;
      TempPostedAssemblyLine.RESET;
    END;

    BEGIN
    END.
  }
}

