OBJECT Page 1319 Mini Sales Credit Memo
{
  OBJECT-PROPERTIES
  {
    Date=15-09-15;
    Time=12:00:00;
    Version List=NAVW19.00,NAVDK9.00;
  }
  PROPERTIES
  {
    CaptionML=[DAN=Salgskreditnota;
               ENU=Sales Credit Memo];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Credit Memo));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[DAN=Ny,Proces,Rapport,Kreditnota,Bogføring,Vis;
                                ENU=New,Process,Report,Credit Memo,Posting,View];
    OnInit=BEGIN
             ShowBillToShipToTab := FALSE;
             ShowDetailsTab := FALSE;
             EnableActions;
             SellToCustomerUsesOIOUBL := CustomerUsesOIOUBL("Sell-to Customer No.")
           END;

    OnOpenPage=VAR
                 FileManagement@1000 : Codeunit 419;
               BEGIN
                 IF UserSetupManagement.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserSetupManagement.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 AllowDotNetAddIn := FileManagement.CanRunDotNetOnClient;
               END;

    OnAfterGetRecord=BEGIN
                       EnableActions;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserSetupManagement.GetSalesFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           SellToCustomerUsesOIOUBL := CustomerUsesOIOUBL("Sell-to Customer No.");
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 57      ;1   ;ActionGroup;
                      Name=Credit Memo;
                      CaptionML=[DAN=&Kreditnota;
                                 ENU=&Credit Memo];
                      Image=CreditMemo }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[DAN=Kunde (Debitor);
                                 ENU=Customer];
                      ToolTipML=[DAN=Vis eller rediger detaljerede oplysninger om debitoren i salgsdokumentet.;
                                 ENU=View or edit detailed information about the customer on the sales document.];
                      RunObject=Page 1300;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category4 }
      { 64      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DAN=Kopiér linjer;
                                 ENU=Copy Document];
                      ToolTipML=[DAN=Kopiér felter og linjer fra et andet dokument til dette dokument.;
                                 ENU=Copy fields and document lines from another document to this document.];
                      PromotedIsBig=Yes;
                      Image=CopyDocument;
                      PromotedCategory=New;
                      OnAction=VAR
                                 CopySalesDoc@1000 : Report 292;
                               BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                               END;
                                }
      { 10      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[DAN=Dimensioner;
                                 ENU=Dimensions];
                      ToolTipML=[DAN=Vis eller rediger de dimensionsgrupper, der er oprettet til debitoren i salgsdokumentet.;
                                 ENU=View or edit the dimension sets that are set up for the customer on the sales document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 41      ;1   ;ActionGroup;
                      Name=Apply;
                      CaptionML=[DAN=Anvend;
                                 ENU=Apply] }
      { 45      ;2   ;Action    ;
                      Name=ApplyEntries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[DAN=Udlign poster;
                                 ENU=Apply Entries];
                      ToolTipML=[DAN=Vælg én eller flere bogførte salgsdokumenter, som salgskreditnotaen skal udlignes til.;
                                 ENU=Select one or more posted sales documents that you want the sales credit memo to be applied to.];
                      RunObject=Codeunit 401;
                      Promoted=No;
                      Image=ApplyEntries;
                      PromotedCategory=Process }
      { 69      ;1   ;ActionGroup;
                      Name=Posting;
                      CaptionML=[DAN=&Bogføring;
                                 ENU=P&osting];
                      Image=Post }
      { 71      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[DAN=&Bogfør;
                                 ENU=P&ost];
                      ToolTipML=[DAN=Færdiggør salgsdokumentet. Ved bogføring opdateres kontiene med de beløb og mængder, der er angivet i dokumentet.;
                                 ENU=Finalize the sales document. Posting updates your books with the document's amounts and quantities.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)");
                               END;
                                }
      { 15      ;2   ;Action    ;
                      Name=PostAndSend;
                      Ellipsis=Yes;
                      CaptionML=[DAN=Bogfør og &send;
                                 ENU=Post and &Send];
                      ToolTipML=[DAN=Færdiggør og send salgsdokumentet.;
                                 ENU=Finalize and send the sales document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostSendTo;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 SendToPosting(CODEUNIT::"Sales-Post and Send");
                               END;
                                }
      { 1001    ;2   ;Action    ;
                      Name=Printer;
                      Ellipsis=Yes;
                      CaptionML=[DAN=&Udskriv;
                                 ENU=&Print];
                      ToolTipML=[DAN=Færdiggør og udskriv salgsdokumentet.;
                                 ENU=Finalize and print the sales document.];
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 PostAndPrint(CODEUNIT::"Sales-Post");
                               END;
                                }
      { 1002    ;2   ;Action    ;
                      Name=Email as PDF;
                      Ellipsis=Yes;
                      CaptionML=[DAN=&Mail;
                                 ENU=&Email];
                      ToolTipML=[DAN=Færdiggør og vedhæft salgsdokumentet i en mail til debitoren.;
                                 ENU=Finalize and attach the sales document to an email to the customer.];
                      Visible=AllowDotNetAddIn;
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post + Email");
                               END;
                                }
      { 1060001 ;2   ;Action    ;
                      Name=OIOUBL;
                      CaptionML=[@@@={Locked};
                                 DAN=&OIOUBL;
                                 ENU=&OIOUBL];
                      Promoted=Yes;
                      Enabled=EnableXMLFileAction;
                      PromotedIsBig=Yes;
                      Image=Export;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post + XML File");
                               END;
                                }
      { 17      ;2   ;Action    ;
                      CaptionML=[DAN=Vis bogføring;
                                 ENU=Preview Posting];
                      Image=ViewPostedOrder;
                      OnAction=BEGIN
                                 ShowPreview;
                               END;
                                }
      { 3       ;1   ;ActionGroup;
                      Name=View;
                      CaptionML=[DAN=Vis;
                                 ENU=View] }
      { 4       ;2   ;Action    ;
                      Name=Bill-to and Ship-to Address;
                      CaptionML=[DAN=Faktureringsadresser;
                                 ENU=Bill-to Addresses];
                      ToolTipML=[DAN=Vis felter til kundens leverings- og faktureringsadresser. Du kan angive en anden adresse, som varen eller servicen skal leveres til, eller angive en anden adresse, som dokumentet skal sendes til.;
                                 ENU=Show fields for the customer's shipping and billing addresses. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShipAddress;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowBillToShipToTab := NOT ShowBillToShipToTab;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=CreditMemoDetails;
                      CaptionML=[DAN=Oplysninger om kreditnota;
                                 ENU=Credit Memo Details];
                      ToolTipML=[DAN=Vis felter til kreditnotaoplysninger, f.eks. valuta, afsendelsesdato og betalingsbetingelser.;
                                 ENU=Show fields for credit memo details, such as currency, shipment date, and payment terms.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=TaxDetail;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowDetailsTab := NOT ShowDetailsTab;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=SalesCreditMemo;
                CaptionML=[DAN=Salgskreditnota;
                           ENU=Sales Credit Memo];
                GroupType=Group }

    { 6   ;2   ;Field     ;
                CaptionML=[DAN=Debitornavn;
                           ENU=Customer Name];
                ToolTipML=[DAN=Angiver navnet på den kunde, der modtager produkterne og faktureres som standard. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies the name of the customer who will receive the products and be billed by default. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                NotBlank=Yes;
                SourceExpr="Sell-to Customer Name";
                TableRelation=Customer.Name;
                LookupPageID=Mini Customer List;
                DrillDownPageID=Mini Customer List;
                OnValidate=VAR
                             NewCustomerNo@1000 : Code[20];
                           BEGIN
                             IF "No." = '' THEN
                               InitRecord;
                             IF ("Sell-to Customer Name" <> xRec."Sell-to Customer Name")
                             THEN BEGIN
                               NewCustomerNo := GetCustNoByName("Sell-to Customer Name");
                               VALIDATE("Sell-to Customer No.",NewCustomerNo);
                             END;
                             CurrPage.UPDATE;
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                             EnableActions;
                             SellToCustomerUsesOIOUBL := CustomerUsesOIOUBL("Sell-to Customer No.");
                           END;

                ShowMandatory=TRUE }

    { 75  ;2   ;Field     ;
                CaptionML=[DAN=Adresse;
                           ENU=Address];
                ToolTipML=[DAN=Angiver adressen på kundens lokalitet. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies the address where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Address" }

    { 11  ;2   ;Field     ;
                CaptionML=[DAN=Adresse 2;
                           ENU=Address 2];
                ToolTipML=[DAN=Angiver en supplerende del af kundens adresse. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies an additional part of the address where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Address 2" }

    { 80  ;2   ;Field     ;
                CaptionML=[DAN=Postnr.;
                           ENU=Post Code];
                ToolTipML=[DAN=Angiver postnummeret på kundens lokalitet. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies the post code where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Post Code" }

    { 79  ;2   ;Field     ;
                CaptionML=[DAN=By;
                           ENU=City];
                ToolTipML=[DAN=Angiver navnet på den by, hvor debitoren har til huse. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies the name of the city where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to City" }

    { 8   ;2   ;Field     ;
                CaptionML=[DAN=Kontakt;
                           ENU=Contact];
                ToolTipML=[DAN=Angiver navnet på personen, der kan kontaktes i kundens virksomhed. Værdien indsættes automatisk fra debitorkortet, når du udfylder feltet Kundenr.. Værdien vises på det udskrevne salgsdokument.;
                           ENU=Specifies the name of the person to contact at the customer. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Contact" }

    { 12  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver den dato, hvor bogføringen af salgsdokumentet skal registreres. Som standard angives dags dato.;
                           ENU=Specifies the date when the posting of the sales document will be recorded. By default, today's date is entered.];
                SourceExpr="Posting Date";
                Importance=Promoted }

    { 43  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver den dato, hvor du oprettede salgsdokumentet. Datoen vises på det udskrevne salgsdokument. Som standard angives dags dato.;
                           ENU=Specifies the date on which you create the sales document. The date will appear on the printed sales document. By default, today's date is entered.];
                SourceExpr="Document Date" }

    { 28  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver, hvornår salgsfakturaen skal betales. Som standard beregnes feltet som datoen i feltet Afsendelsesdato plus den periode, der er defineret i feltet Betalingsbeting.kode.;
                           ENU=Specifies when the sales invoice must be paid. By default, the field is calculated as the date in the Shipment Date field plus the period defined in the Payment Terms Code field.];
                SourceExpr="Due Date";
                Importance=Promoted }

    { 37  ;2   ;Field     ;
                ToolTipML=[DAN=Dette felt kan bruges, hvis fakturaen skal udligne et allerede bogført dokument. Er det tilfældet, skal du her indsætte typen på det dokument, der skal udlignes.;
                           ENU=You can use this field if you want the invoice, when you post it, to be applied to a document that has already been posted. In this case, enter here the type of document that it should be applied to.];
                SourceExpr="Applies-to Doc. Type" }

    { 39  ;2   ;Field     ;
                ToolTipML=[DAN=Dette felt kan bruges, hvis fakturaen skal udligne et allerede bogført dokument. Hvis det er tilfældet, skal du her indsætte nummeret på det dokument, som fakturaen skal udligne.;
                           ENU=You can use this field if you want to apply the invoice to a document that has already been posted. If so, enter the number of the document that the invoice should be applied to.];
                SourceExpr="Applies-to Doc. No." }

    { 40  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver det udlignings-id, der udlignes af salgsdokumentet, hvis du bruger funktionen Udlign poster.;
                           ENU=Specifies the applies-to ID of entries that will be applied to by the sales document if you use the Apply Entries function.];
                SourceExpr="Applies-to ID" }

    { 1060000;2;Field     ;
                ToolTipML=[DAN=Angiver nummeret, som debitoren anvender i deres eget system til at henvise til dette salgsdokument. Du kan udfylde dette felt og bruge det senere til at søge efter salgslinjer ved hjælp af kundens ordrenummer.;
                           ENU=Specifies the number that the customer uses in their own system to refer to this sales document. You can fill this field to use it later to search for sales lines using the customer's order number.];
                SourceExpr="External Document No.";
                ShowMandatory=SellToCustomerUsesOIOUBL }

    { 7   ;1   ;Group     ;
                Name=CreditMemoDetails;
                CaptionML=[DAN=Oplysninger om kreditnota;
                           ENU=Credit Memo Details];
                Visible=ShowDetailsTab;
                GroupType=Group }

    { 107 ;2   ;Field     ;
                ToolTipML=[DAN=Angiver valutaen for beløbene i salgsdokumentet. Som standard udfyldes feltet med værdien i feltet Valutakode på debitorkortet.;
                           ENU=Specifies the currency of amounts on the sales document. By default, the field is filled with the value in the Currency Code field on the customer card.];
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=VAR
                               ChangeExchangeRate@1000 : Page 511;
                             BEGIN
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 33  ;2   ;Field     ;
                ToolTipML=[DAN=Viser den dato, hvor varerne forventes sendt, på salgsdokumentet. Som standard angives dags dato.;
                           ENU=Specifies the date you expect to ship items on the sales document. By default, today's date is entered.];
                SourceExpr="Shipment Date" }

    { 121 ;2   ;Field     ;
                ToolTipML=[DAN=Angiver, om enhedsprisen på linjen skal vises med eller uden moms.;
                           ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.];
                SourceExpr="Prices Including VAT";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             CALCFIELDS("Invoice Discount Amount");
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount("Invoice Discount Amount",Rec);
                           END;
                            }

    { 156 ;2   ;Field     ;
                ToolTipML=[DAN=Angiver debitorens momsspecifikation for at knytte transaktioner, der er foretaget for denne debitor, til den relevante finanskonto i overensstemmelse med momsbogføringsopsætningen.;
                           ENU=Specifies the customer's VAT specification to link transactions made for this customer with the appropriate general ledger account according to the VAT posting setup.];
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 26  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver en formel, der beregner betalingens forfaldsdato, kontantrabatdato og kontantrabatbeløb på salgsdokumentet. Som standard angives betalingsvilkårene fra debitorkortet.;
                           ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document. By default, the payment term from the customer card is entered.];
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 101 ;2   ;Field     ;
                ToolTipML=[DAN=Angiver, hvordan betaling af salgsdokumentet skal sendes, som f.eks. bankoverførsel eller check. Som standard angives betalingsformen fra debitorkortet.;
                           ENU=Specifies how payment for the sales document must be submitted, such as bank transfer or check. By default, the payment method from the customer card is entered.];
                SourceExpr="Payment Method Code" }

    { 112 ;2   ;Field     ;
                ToolTipML=[DAN=Angiver, om dokumentet er åbent, venter på godkendelse, er faktureret til forudbetaling eller er frigivet til næste fase i behandlingen.;
                           ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.];
                SourceExpr=Status;
                Importance=Promoted;
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                ToolTipML=[DAN=Angiver nummeret for transaktionstypen med henblik på rapportering til INTRASTAT.;
                           ENU=Specifies the number for the transaction type, for the purpose of reporting to INTRASTAT.];
                SourceExpr="Transaction Type" }

    { 1905885101;1;Group  ;
                Name=BilltoandShiptoAddresses;
                CaptionML=[DAN=Adresser på faktureringskunder;
                           ENU=Bill-to Customer Addresses];
                Visible=ShowBillToShipToTab;
                GroupType=Group }

    { 18  ;2   ;Field     ;
                CaptionML=[DAN=Navn;
                           ENU=Name];
                ToolTipML=[DAN=Angiver den debitor, du vil sende salgsfakturaen til, når det er til en anden debitor end den, du sælger til. Som standard angives navnet og adressen på den debitor, du sælger til.;
                           ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to. By default, the name and address of the customer that you are selling to is entered.];
                SourceExpr="Bill-to Name";
                TableRelation=Customer.Name;
                LookupPageID=Mini Customer List;
                DrillDownPageID=Mini Customer List;
                OnValidate=VAR
                             MiniCustomerMgt@1001 : Codeunit 1302;
                             NewCustomerNo@1000 : Code[20];
                           BEGIN
                             IF "Bill-to Name" <> xRec."Bill-to Name" THEN BEGIN
                               NewCustomerNo := MiniCustomerMgt.GetCustNoByName("Bill-to Name");
                               VALIDATE("Bill-to Customer No.",NewCustomerNo);
                             END;
                             CurrPage.UPDATE;
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 19  ;2   ;Field     ;
                CaptionML=[DAN=Adresse;
                           ENU=Address];
                ToolTipML=[DAN=Angiver kundens adresse, som du vil sende fakturaen til.;
                           ENU=Specifies the address of the customer that you will send the invoice to.];
                SourceExpr="Bill-to Address" }

    { 24  ;2   ;Field     ;
                CaptionML=[DAN=Adresse 2;
                           ENU=Address 2];
                ToolTipML=[DAN=Indeholder en supplerende del af adressen på den debitor, som fakturaen bliver sendt til.;
                           ENU=Contains another line of the address of the customer that you will send the invoice to.];
                SourceExpr="Bill-to Address 2" }

    { 16  ;2   ;Field     ;
                CaptionML=[DAN=Postnr.;
                           ENU=Post Code];
                ToolTipML=[DAN=Angiver postnummeret for faktureringsadressen for debitoren.;
                           ENU=Specifies the post code of the customer's billing address.];
                SourceExpr="Bill-to Post Code" }

    { 14  ;2   ;Field     ;
                CaptionML=[DAN=By;
                           ENU=City];
                ToolTipML=[DAN=Angiver bynavnet på kunden, som fakturaen sendes til.;
                           ENU=Specifies the city name of the customer that you will send the invoice to.];
                SourceExpr="Bill-to City" }

    { 9   ;2   ;Field     ;
                CaptionML=[DAN=Kontakt;
                           ENU=Contact];
                ToolTipML=[DAN=Viser navnet på den person, du skal kontakte hos den debitor, som fakturaen bliver sendt til.;
                           ENU=Specifies the name of the person you should contact at the customer that you are sending the invoice to.];
                SourceExpr="Bill-to Contact" }

    { 13  ;1   ;Part      ;
                Name=SalesLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page1320 }

  }
  CODE
  {
    VAR
      UserSetupManagement@1004 : Codeunit 5700;
      MiniSalesCalcDiscByType@1002 : Codeunit 1300;
      MiniLinesInstructionMgt@1003 : Codeunit 1320;
      ShowBillToShipToTab@1005 : Boolean;
      ShowDetailsTab@1007 : Boolean;
      SelectCustErr@1008 : TextConst 'DAN=Du skal vælge en eksisterende debitor.;ENU=You must select an existing customer.';
      OpenPostedSalesCrMemoQst@1006 : TextConst 'DAN=Kreditnotaen er blevet bogført og arkiveret.\\Vil du åbne den bogførte kreditnota fra listen Bogført salgskreditnota?;ENU=The credit memo has been posted and archived.\\Do you want to open the posted credit memo from the Posted Sales Credit Memo list?';
      AllowDotNetAddIn@1000 : Boolean INDATASET;
      PostAndPrintQst@1001 : TextConst 'DAN=Vil du bogføre og udskrive kreditnotaen?;ENU=Do you want to post and print the credit memo?';
      EnableXMLFileAction@1060000 : Boolean;
      SellToCustomerUsesOIOUBL@1060001 : Boolean;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      PreAssignedNo@1001 : Code[20];
    BEGIN
      MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
      PreAssignedNo := "No.";
      SendToPosting(PostingCodeunitID);
      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE
      ELSE
        ShowPostedConfirmationMessage(PreAssignedNo);
    END;

    LOCAL PROCEDURE PostAndPrint@1(PostingCodeunitID@1000 : Integer);
    VAR
      SalesCrMemoHeader@1001 : Record 114;
      DocumentNo@1002 : Code[20];
      PreAssignedNo@1003 : Code[20];
    BEGIN
      MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);

      IF NOT CONFIRM(PostAndPrintQst,FALSE) THEN
        EXIT;

      PreAssignedNo := "No.";
      SendToPosting(PostingCodeunitID);

      IF "Last Posting No." = '' THEN
        DocumentNo := "No."
      ELSE
        DocumentNo := "Last Posting No.";

      IF SalesCrMemoHeader.GET(DocumentNo) THEN BEGIN
        SalesCrMemoHeader.SETRECFILTER;
        COMMIT;
        SalesCrMemoHeader.PrintRecords(NOT AllowDotNetAddIn);
        ShowPostedConfirmationMessage(PreAssignedNo);
      END;
    END;

    LOCAL PROCEDURE GetCustNoByName@56(CustomerName@1000 : Text[50]) : Code[20];
    VAR
      Customer@1001 : Record 18;
    BEGIN
      Customer.SETRANGE(Name,CustomerName);
      CASE Customer.COUNT OF
        0:
          ERROR(SelectCustErr);
        1:
          BEGIN
            Customer.FINDFIRST;
            EXIT(Customer."No.");
          END;
        ELSE
          EXIT(PickCustomer(Customer));
      END;
    END;

    LOCAL PROCEDURE PickCustomer@58(Customer@1000 : Record 18) : Code[20];
    VAR
      MiniCustomerList@1001 : Page 1301;
    BEGIN
      MiniCustomerList.SETTABLEVIEW(Customer);
      MiniCustomerList.LOOKUPMODE := TRUE;
      IF MiniCustomerList.RUNMODAL <> ACTION::LookupOK THEN
        ERROR(SelectCustErr);

      MiniCustomerList.GETRECORD(Customer);
      EXIT(Customer."No.");
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@7(PreAssignedNo@1001 : Code[20]);
    VAR
      SalesCrMemoHeader@1000 : Record 114;
    BEGIN
      SalesCrMemoHeader.SETRANGE("Pre-Assigned No.",PreAssignedNo);
      IF SalesCrMemoHeader.FINDFIRST THEN
        IF DIALOG.CONFIRM(OpenPostedSalesCrMemoQst,FALSE) THEN
          PAGE.RUN(PAGE::"Mini Posted Sales Credit Memo",SalesCrMemoHeader);
    END;

    LOCAL PROCEDURE EnableActions@1060000();
    BEGIN
      EnableXMLFileAction := "EAN No." <> '';
    END;

    LOCAL PROCEDURE CustomerUsesOIOUBL@1060002(CustomerNo@1060000 : Code[20]) : Boolean;
    VAR
      Customer@1060001 : Record 18;
    BEGIN
      IF Customer.GET(CustomerNo) THEN
        EXIT (Customer."OIOUBL Profile Code" <> '');
      EXIT(FALSE)
    END;

    PROCEDURE ShowPreview@3();
    VAR
      SalesPostYesNo@1000 : Codeunit 81;
    BEGIN
      SalesPostYesNo.Preview(Rec);
    END;

    BEGIN
    END.
  }
}

