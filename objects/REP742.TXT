OBJECT Report 742 VAT Report Request Page
{
  OBJECT-PROPERTIES
  {
    Date=30-05-19;
    Time=12:00:00;
    Version List=NAVW19.00.00.51418;
  }
  PROPERTIES
  {
    CaptionML=[DAN=Side med VAT-rapportanmodning;
               ENU=VAT Report Request Page];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table740;
               OnPreDataItem=VAR
                               VATStatementLine@1001 : Record 256;
                               VATStatementReportLine@1000 : Record 742;
                               VATStatementName@1004 : Record 257;
                               VATStatement@1002 : Report 12;
                               ColumnValue@1003 : Decimal;
                             BEGIN
                               COPY(Rec);

                               VATStatementName.SETRANGE("Statement Template Name","Statement Template Name");
                               VATStatementName.SETRANGE(Name,"Statement Name");
                               VATStatementName.SETRANGE("Date Filter","Start Date","End Date");

                               VATStatementName.COPYFILTER("Date Filter",VATStatementLine."Date Filter");

                               VATStatementLine.SETRANGE("Statement Template Name","Statement Template Name");
                               VATStatementLine.SETRANGE("Statement Name","Statement Name");
                               VATStatementLine.SETFILTER("Box No.",'<>%1','');
                               VATStatementLine.FINDSET;

                               VATStatement.InitializeRequest(
                                 VATStatementName,VATStatementLine,Selection,PeriodSelection,FALSE,"Amounts in Add. Rep. Currency");

                               VATStatementReportLine.SETRANGE("VAT Report No.","No.");
                               VATStatementReportLine.SETRANGE("VAT Report Config. Code","VAT Report Config. Code");
                               VATStatementReportLine.DELETEALL;

                               REPEAT
                                 VATStatement.CalcLineTotal(VATStatementLine,ColumnValue,0);
                                 IF VATStatementLine."Print with" = VATStatementLine."Print with"::"Opposite Sign" THEN
                                   ColumnValue := -ColumnValue;
                                 VATStatementReportLine.INIT;
                                 VATStatementReportLine.VALIDATE("VAT Report No.","No.");
                                 VATStatementReportLine.VALIDATE("VAT Report Config. Code","VAT Report Config. Code");
                                 VATStatementReportLine.VALIDATE("Line No.",VATStatementLine."Line No.");
                                 VATStatementReportLine.VALIDATE("Row No.",VATStatementLine."Row No.");
                                 VATStatementReportLine.VALIDATE(Description,VATStatementLine.Description);
                                 VATStatementReportLine.VALIDATE("Box No.",VATStatementLine."Box No.");
                                 VATStatementReportLine.VALIDATE(Amount,ColumnValue);
                                 VATStatementReportLine.INSERT;
                               UNTIL VATStatementLine.NEXT = 0;
                             END;
                              }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      SourceTable=Table740;
      ShowFilter=No;
      OnOpenPage=VAR
                   VATStatementTemplate@1000 : Record 255;
                   VATStatementName@1001 : Record 257;
                 BEGIN
                   COPYFILTERS("VAT Report Header");
                   FINDFIRST;

                   IF VATStatementTemplate.COUNT = 1 THEN BEGIN
                     VATStatementTemplate.FINDFIRST;
                     "Statement Template Name" := VATStatementTemplate.Name;
                     MODIFY;

                     VATStatementName.SETRANGE("Statement Template Name",VATStatementTemplate.Name);
                     IF VATStatementName.COUNT = 1 THEN BEGIN
                       VATStatementName.FINDFIRST;
                       "Statement Name" := VATStatementName.Name;
                       MODIFY;
                     END;
                   END;

                   PeriodIsEditable := "Return Period No." = '';
                   OnAfterSetPeriodIsEditable(Rec,PeriodIsEditable);
                 END;

    }
    CONTROLS
    {
      { 1   ;    ;Container ;
                  Name=RequestPage;
                  ContainerType=ContentArea }

      { 11  ;1   ;Group     ;
                  Name=Options;
                  CaptionML=[DAN=Indstillinger;
                             ENU=Options];
                  GroupType=Group }

      { 2   ;2   ;Field     ;
                  Name=Selection;
                  CaptionML=[DAN=Medtag momsposter;
                             ENU=Include VAT entries];
                  ToolTipML=[DAN=Angiver, om du vil medtage momsposter, der er baseret på deres status. Eksempelvis er Åben nyttigt ved afsendelse for første gang. Åben og Lukket er nyttige, når du sender igen.;
                             ENU=Specifies whether to include VAT entries based on their status. For example, Open is useful when submitting for the first time, Open and Closed is useful when resubmitting.];
                  OptionCaptionML=[DAN=Åben,Lukket,Åben og lukket;
                                   ENU=Open,Closed,Open and Closed];
                  SourceExpr=Selection;
                  ShowMandatory=True }

      { 3   ;2   ;Field     ;
                  Name=PeriodSelection;
                  CaptionML=[DAN=Medtag momsposter;
                             ENU=Include VAT entries];
                  ToolTipML=[DAN=Angiver, om du kun vil medtage momsposter fra den angivne periode eller fra tidligere perioder i det angivne år.;
                             ENU=Specifies whether to include VAT entries only from the specified period, or also from previous periods within the specified year.];
                  OptionCaptionML=[DAN=Før og i perioden,I perioden;
                                   ENU=Before and Within Period,Within Period];
                  SourceExpr=PeriodSelection;
                  ShowMandatory=True }

      { 9   ;2   ;Field     ;
                  Name=VATStatementTemplate;
                  CaptionML=[DAN=Momsangivelsestype;
                             ENU=VAT Statement Template];
                  ToolTipML=[DAN=Angiver momsangivelsen, som momsrapporten skal genereres ud fra.;
                             ENU=Specifies the VAT Statement to generate the VAT report.];
                  SourceExpr="Statement Template Name";
                  TableRelation="VAT Statement Template";
                  ShowMandatory=True }

      { 10  ;2   ;Field     ;
                  Name=VATStatementName;
                  CaptionML=[DAN=Momsangivelsesnavn;
                             ENU=VAT Statement Name];
                  ToolTipML=[DAN=Angiver momsangivelsen, som momsrapporten skal genereres ud fra.;
                             ENU=Specifies the VAT Statement to generate the VAT report.];
                  SourceExpr="Statement Name";
                  TableRelation="VAT Statement Name".Name WHERE (Statement Template Name=FIELD(Statement Template Name));
                  LookupPageID=VAT Statement Names;
                  ShowMandatory=True }

      { 4   ;2   ;Field     ;
                  Name=Period Year;
                  CaptionML=[DAN=Periodeår;
                             ENU=Period Year];
                  ToolTipML=[DAN=Angiver året for rapporteringsperioden.;
                             ENU=Specifies the year of the reporting period.];
                  SourceExpr="Period Year";
                  Editable=PeriodIsEditable }

      { 5   ;2   ;Field     ;
                  ToolTipML=[DAN=Angiver rapporteringsperiodens længde.;
                             ENU=Specifies the length of the reporting period.];
                  SourceExpr="Period Type";
                  Editable=PeriodIsEditable }

      { 6   ;2   ;Field     ;
                  ToolTipML=[DAN=Angiver den specifikke rapporteringsperiode, som skal bruges.;
                             ENU=Specifies the specific reporting period to use.];
                  SourceExpr="Period No.";
                  Editable=PeriodIsEditable }

      { 7   ;2   ;Field     ;
                  ToolTipML=[DAN=Angiver rapporteringsperiodens første dato.;
                             ENU=Specifies the first date of the reporting period.];
                  SourceExpr="Start Date";
                  Importance=Additional;
                  Editable=PeriodIsEditable;
                  ShowMandatory=True }

      { 8   ;2   ;Field     ;
                  ToolTipML=[DAN=Angiver rapporteringsperiodens sidste dato.;
                             ENU=Specifies the last date of the reporting period.];
                  SourceExpr="End Date";
                  Importance=Additional;
                  Editable=PeriodIsEditable;
                  ShowMandatory=True }

      { 100 ;2   ;Field     ;
                  Name=Amounts in ACY;
                  CaptionML=[DAN=Beløb i ekstra rapporteringsvaluta;
                             ENU=Amounts in Add. Reporting Currency];
                  ToolTipML=[DAN=Angiver, om du vil rapportere beløb i den ekstra rapporteringsvaluta.;
                             ENU=Specifies if you want to report amounts in the additional reporting currency.];
                  SourceExpr="Amounts in Add. Rep. Currency";
                  Importance=Additional }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Selection@1001 : 'Open,Closed,Open and Closed';
      PeriodSelection@1000 : 'Before and Within Period,Within Period';
      PeriodIsEditable@1002 : Boolean INDATASET;

    [Integration]
    LOCAL PROCEDURE OnAfterSetPeriodIsEditable@2(VATReportHeader@1000 : Record 740;VAR PeriodIsEditable@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

