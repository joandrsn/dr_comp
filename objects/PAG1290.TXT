OBJECT Page 1290 Payment Reconciliation Journal
{
  OBJECT-PROPERTIES
  {
    Date=27-10-16;
    Time=12:00:00;
    Version List=NAVW19.00.00.47256,NAVDK9.00.00.47256;
  }
  PROPERTIES
  {
    CaptionML=[DAN=Betalingsafstemningskladde;
               ENU=Payment Reconciliation Journal];
    LinksAllowed=No;
    SourceTable=Table274;
    DataCaptionExpr="Bank Account No.";
    DelayedInsert=Yes;
    SourceTableView=WHERE(Statement Type=CONST(Payment Application));
    PageType=Worksheet;
    AutoSplitKey=Yes;
    PromotedActionCategoriesML=[DAN=Ny,Proces,Rapport,Gennemse,Detaljer,Brugerdefineret sortering;
                                ENU=New,Process,Report,Review,Details,Custom Sorting];
    OnClosePage=BEGIN
                  UpdateFIKStatus;
                END;

    OnAfterGetRecord=VAR
                       PaymentMatchingDetails@1000 : Record 1299;
                     BEGIN
                       MatchDetails := PaymentMatchingDetails.MergeMessages(Rec);

                       GetAppliedPmtData(AppliedPmtEntry,RemainingAmountAfterPosting,StatementToRemAmtDifference,PmtAppliedToTxt);
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  SetUpNewLine;
                  AppliedPmtEntry.INIT;
                  StatementToRemAmtDifference := 0;
                  RemainingAmountAfterPosting := 0;
                END;

    OnAfterGetCurrRecord=BEGIN
                           IF NOT IsBankAccReconInitialized THEN BEGIN
                             BankAccReconciliation.GET("Statement Type","Bank Account No.","Statement No.");
                             IsBankAccReconInitialized := TRUE;
                           END;

                           FinanceChargeMemoEnabled := "Account Type" = "Account Type"::Customer;
                           BankAccReconciliation.CALCFIELDS("Total Balance on Bank Account","Total Applied Amount","Total Transaction Amount");
                         END;

    ActionList=ACTIONS
    {
      { 45      ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 22      ;1   ;Action    ;
                      Name=ImportBankTransactions;
                      Ellipsis=Yes;
                      CaptionML=[DAN=&Importér banktransaktioner;
                                 ENU=&Import Bank Transactions];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 BankAccReconciliation.GET("Statement Type","Bank Account No.","Statement No.");

                                 IF (COUNT > 0) AND BankAccReconciliation."FIK Payment Reconciliation" THEN
                                   ERROR(CannotImportStatementIntoFIKErr);

                                 BankAccReconciliation.ImportBankStatement;
                                 CurrPage.UPDATE(FALSE);

                                 BankAccReconciliation.GET("Statement Type","Bank Account No.","Statement No.");
                                 BankAccReconciliation."FIK Payment Reconciliation" := FALSE;
                                 BankAccReconciliation.MODIFY;
                               END;
                                }
      { 1060001 ;1   ;Action    ;
                      Name=ImportFIKStatement;
                      Ellipsis=Yes;
                      CaptionML=[DAN=Importér FIK-kontoudtog;
                                 ENU=Import FIK Statement];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 BankAccReconciliation@1060000 : Record 273;
                               BEGIN
                                 BankAccReconciliation.GET("Statement Type","Bank Account No.","Statement No.");
                                 IF (COUNT > 0) AND (NOT BankAccReconciliation."FIK Payment Reconciliation") THEN
                                   ERROR(CannotImportFIKLinesErr);

                                 IF BankAccReconciliation.ImportFIK THEN BEGIN
                                   COMMIT;
                                   CODEUNIT.RUN(CODEUNIT::"Match FIK Bank Rec. Lines",BankAccReconciliation);
                                   CurrPage.UPDATE(FALSE);
                                 END;
                               END;
                                }
      { 30      ;1   ;Action    ;
                      Name=AddMappingRule;
                      CaptionML=[DAN=Knyt tekst til konto;
                                 ENU=Map Text to Account];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Add;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TextToAccMapping@1000 : Record 1251;
                                 MatchBankPayments@1001 : Codeunit 1255;
                               BEGIN
                                 BankAccReconciliation.GET("Statement Type","Bank Account No.","Statement No.");
                                 UpdateFIKStatus;
                                 IF BankAccReconciliation."FIK Payment Reconciliation" THEN
                                   ERROR(CannotAddMappingRulesForFIKLinesErr);

                                 TextToAccMapping.InsertRecFromBankAccReconciliationLine(Rec);
                                 MatchBankPayments.RerunTextMapper(Rec);
                               END;
                                }
      { 29      ;1   ;Action    ;
                      Name=ApplyAutomatically;
                      CaptionML=[DAN=Udlign automatisk;
                                 ENU=Apply Automatically];
                      RunPageOnRec=Yes;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MapAccounts;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 BankAccReconciliation@1000 : Record 273;
                                 AppliedPaymentEntry@1001 : Record 1294;
                               BEGIN
                                 AppliedPaymentEntry.SETRANGE("Statement Type","Statement Type");
                                 AppliedPaymentEntry.SETRANGE("Bank Account No.","Bank Account No.");
                                 AppliedPaymentEntry.SETRANGE("Statement No.","Statement No.");

                                 IF AppliedPaymentEntry.COUNT > 0 THEN
                                   IF NOT CONFIRM(RemoveExistingApplicationsQst) THEN
                                     EXIT;

                                 BankAccReconciliation.GET("Statement Type","Bank Account No.","Statement No.");
                                 UpdateFIKStatus;
                                 IF BankAccReconciliation."FIK Payment Reconciliation" THEN
                                   CODEUNIT.RUN(CODEUNIT::"Match FIK Bank Rec. Lines",BankAccReconciliation)
                                 ELSE
                                   CODEUNIT.RUN(CODEUNIT::"Match Bank Pmt. Appl.",BankAccReconciliation);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 35      ;1   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=[DAN=Bogfør;
                                 ENU=Post];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 BankAccReconciliation.GET("Statement Type","Bank Account No.","Statement No.");
                                 CODEUNIT.RUN(CODEUNIT::"Bank Acc. Recon. Post (Yes/No)",BankAccReconciliation);
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 42      ;1   ;ActionGroup;
                      CaptionML=[DAN=Nye dokumenter;
                                 ENU=New Documents] }
      { 20      ;2   ;Action    ;
                      Name=FinanceChargeMemo;
                      CaptionML=[DAN=Ny rentenota;
                                 ENU=New Finance Charge Memo];
                      RunObject=Page 446;
                      RunPageLink=Customer No.=FIELD(Account No.);
                      Enabled=FinanceChargeMemoEnabled;
                      PromotedIsBig=Yes;
                      Image=FinChargeMemo;
                      RunPageMode=Create }
      { 41      ;2   ;Action    ;
                      Name=OpenGenJnl;
                      CaptionML=[DAN=Kassekladde;
                                 ENU=General Journal];
                      RunObject=Page 39;
                      PromotedIsBig=Yes;
                      Image=GLRegisters }
      { 40      ;2   ;Action    ;
                      CaptionML=[DAN=Udbetalingskladde;
                                 ENU=Payment Journal];
                      RunObject=Page 256;
                      PromotedIsBig=Yes;
                      Image=PaymentJournal }
      { 44      ;1   ;ActionGroup;
                      CaptionML=[DAN=Gennemse;
                                 ENU=Review] }
      { 36      ;2   ;Action    ;
                      Name=Accept;
                      CaptionML=[DAN=Acceptér udligninger;
                                 ENU=Accept Applications];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 BankAccReconciliationLine@1000 : Record 274;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(BankAccReconciliationLine);
                                 BankAccReconciliationLine.AcceptAppliedPaymentEntriesSelectedLines;
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[DAN=Fjern udligninger;
                                 ENU=Remove Applications];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 BankAccReconciliationLine@1000 : Record 274;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(BankAccReconciliationLine);
                                 BankAccReconciliationLine.RejectAppliedPaymentEntriesSelectedLines;
                               END;
                                }
      { 31      ;2   ;Action    ;
                      Name=ApplyEntries;
                      Ellipsis=Yes;
                      CaptionML=[DAN=&Udlign manuelt;
                                 ENU=&Apply Manually];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 DisplayApplication;
                                 GetAppliedPmtData(AppliedPmtEntry,RemainingAmountAfterPosting,StatementToRemAmtDifference,PmtAppliedToTxt);
                               END;
                                }
      { 15      ;1   ;ActionGroup;
                      CaptionML=[DAN=Brugerdefineret sortering;
                                 ENU=Custom Sorting] }
      { 32      ;2   ;Action    ;
                      Name=SortForReviewDescending;
                      CaptionML=[DAN=Sortér for gennemsyn faldende;
                                 ENU=Sort for Review Descending];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MoveDown;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 UpdateSorting(FALSE);
                               END;
                                }
      { 34      ;2   ;Action    ;
                      Name=SortForReviewAscending;
                      CaptionML=[DAN=Sortér for gennemsyn stigende;
                                 ENU=Sort for Review Ascending];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MoveUp;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 UpdateSorting(TRUE);
                               END;
                                }
      { 39      ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 38      ;1   ;Action    ;
                      Name=Dimensions;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[DAN=Dimensioner;
                                 ENU=Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 BankAccReconciliation.GET("Statement Type","Bank Account No.","Statement No.");
                                 BankAccReconciliation.ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 6       ;1   ;Action    ;
                      Name=LineDimensions;
                      CaptionML=[DAN=Linjedimensioner;
                                 ENU=Line Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 21      ;1   ;Action    ;
                      CaptionML=[DAN=Bankkontokort;
                                 ENU=Bank Account Card];
                      RunObject=Page 1283;
                      RunPageLink=No.=FIELD(Bank Account No.);
                      Image=BankAccount }
      { 53      ;1   ;ActionGroup;
                      CaptionML=[DAN=Detaljer;
                                 ENU=Details] }
      { 27      ;2   ;Action    ;
                      Name=ShowBankTransactionDetails;
                      CaptionML=[DAN=Banktransaktionsdetaljer;
                                 ENU=Bank Transaction Details];
                      RunObject=Page 1221;
                      RunPageLink=Data Exch. No.=FIELD(Data Exch. Entry No.),
                                  Line No.=FIELD(Data Exch. Line No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ExternalDocument;
                      PromotedCategory=Category5 }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater;
                FreezeColumnID=Statement Amount }

    { 9   ;2   ;Field     ;
                SourceExpr="Match Confidence";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DisplayApplication;
                            END;
                             }

    { 11  ;2   ;Field     ;
                SourceExpr="Transaction Date" }

    { 16  ;2   ;Field     ;
                Width=40;
                SourceExpr="Transaction Text" }

    { 8   ;2   ;Field     ;
                CaptionML=[DAN=Transaktionsbeløb;
                           ENU=Transaction Amount];
                SourceExpr="Statement Amount";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             CurrPage.UPDATE(FALSE)
                           END;
                            }

    { 12  ;2   ;Field     ;
                SourceExpr=Difference;
                Visible=FALSE;
                Editable=FALSE }

    { 52  ;2   ;Field     ;
                Name=StatementToRemAmtDifference;
                CaptionML=[DAN=Difference fra restbeløb;
                           ENU=Difference from Remaining Amount];
                BlankZero=Yes;
                SourceExpr=StatementToRemAmtDifference;
                Enabled=FALSE }

    { 49  ;2   ;Field     ;
                CaptionML=[DAN=Bilagsnr.;
                           ENU=Document No.];
                SourceExpr=GetAppliedToDocumentNo }

    { 47  ;2   ;Field     ;
                Name=DescAppliedEntry;
                CaptionML=[DAN=Beskrivelse;
                           ENU=Description];
                SourceExpr=AppliedPmtEntry.Description;
                Editable=FALSE }

    { 50  ;2   ;Field     ;
                Name=DueDateAppliedEntry;
                CaptionML=[DAN=Forfaldsdato;
                           ENU=Due Date];
                SourceExpr=AppliedPmtEntry."Due Date" }

    { 4   ;2   ;Field     ;
                SourceExpr="Account Type" }

    { 13  ;2   ;Field     ;
                SourceExpr="Account No.";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             IF Difference > 0 THEN
                               TransferRemainingAmountToAccount;
                           END;
                            }

    { 46  ;2   ;Field     ;
                Name=PostingDateAppliedEntry;
                CaptionML=[DAN=Bogføringsdato;
                           ENU=Posting Date];
                SourceExpr=AppliedPmtEntry."Posting Date";
                Visible=FALSE;
                Editable=FALSE }

    { 51  ;2   ;Field     ;
                CaptionML=[DAN=Valutakode for post;
                           ENU=Entry Currency Code];
                SourceExpr=AppliedPmtEntry."Currency Code";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                Name=Match Details;
                CaptionML=[DAN=Matchdetaljer;
                           ENU=Match Details];
                SourceExpr=MatchDetails;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DisplayApplication;
                            END;
                             }

    { 14  ;2   ;Field     ;
                SourceExpr="Applied Entries";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Applied Amount" }

    { 48  ;2   ;Field     ;
                Name=RemainingAmount;
                CaptionML=[DAN=Restbeløb (efter bogføring);
                           ENU=Remaining Amount After Posting];
                BlankZero=Yes;
                SourceExpr=RemainingAmountAfterPosting;
                Visible=FALSE;
                Editable=FALSE }

    { 7   ;2   ;Field     ;
                Width=40;
                SourceExpr="Additional Transaction Info";
                Visible=FALSE;
                Editable=FALSE }

    { 18  ;2   ;Field     ;
                Width=30;
                SourceExpr="Related-Party Address";
                Visible=FALSE;
                Editable=FALSE }

    { 5   ;2   ;Field     ;
                Width=20;
                SourceExpr="Related-Party Bank Acc. No.";
                Visible=FALSE;
                Editable=FALSE }

    { 19  ;2   ;Field     ;
                Width=10;
                SourceExpr="Related-Party City";
                Visible=FALSE;
                Editable=FALSE }

    { 17  ;2   ;Field     ;
                Width=30;
                SourceExpr="Related-Party Name";
                Visible=FALSE;
                Editable=FALSE }

    { 64  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver den dimensionsværdikode, der er knyttet til kladdelinjen.;
                           ENU=Specifies the dimension value code linked to the journal line.];
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 65  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver den dimensionsværdikode, der er knyttet til kladdelinjen.;
                           ENU=Specifies the dimension value code linked to the journal line.];
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 71  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver den dimensionsværdikode, der er knyttet til kladdelinjen.;
                           ENU=Specifies the dimension value code linked to the journal line.];
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 70  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver den dimensionsværdikode, der er knyttet til kladdelinjen.;
                           ENU=Specifies the dimension value code linked to the journal line.];
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 69  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver den dimensionsværdikode, der er knyttet til kladdelinjen.;
                           ENU=Specifies the dimension value code linked to the journal line.];
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 68  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver den dimensionsværdikode, der er knyttet til kladdelinjen.;
                           ENU=Specifies the dimension value code linked to the journal line.];
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 67  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver den dimensionsværdikode, der er knyttet til kladdelinjen.;
                           ENU=Specifies the dimension value code linked to the journal line.];
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 66  ;2   ;Field     ;
                ToolTipML=[DAN=Angiver den dimensionsværdikode, der er knyttet til kladdelinjen.;
                           ENU=Specifies the dimension value code linked to the journal line.];
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 43  ;1   ;Field     ;
                Name=AccountName;
                CaptionML=[DAN=Kontonavn:;
                           ENU=Account Name:];
                SourceExpr=GetAppliedToName;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AppliedToDrillDown;
                            END;
                             }

    { 28  ;1   ;Group     ;
                GroupType=Group }

    { 33  ;2   ;Group     ;
                Editable=FALSE;
                GroupType=Group }

    { 25  ;3   ;Field     ;
                Name=BalanceOnBankAccount;
                CaptionML=[DAN=Saldo på bankkonto;
                           ENU=Balance on Bank Account];
                SourceExpr=BankAccReconciliation."Total Balance on Bank Account";
                AutoFormatType=1 }

    { 26  ;3   ;Field     ;
                Name=TotalTransactionAmount;
                CaptionML=[DAN=Transaktionsbeløb i alt;
                           ENU=Total Transaction Amount];
                SourceExpr=BankAccReconciliation."Total Transaction Amount";
                AutoFormatType=1 }

    { 24  ;3   ;Field     ;
                Name=BalanceOnBankAccountAfterPosting;
                CaptionML=[DAN=Saldo på bankkonto efter bogføring;
                           ENU=Balance on Bank Account After Posting];
                SourceExpr=BankAccReconciliation."Total Balance on Bank Account" + BankAccReconciliation."Total Transaction Amount";
                AutoFormatType=1 }

    { 3   ;2   ;Group     ;
                GroupType=Group }

    { 54  ;3   ;Field     ;
                ShowCaption=No }

    { 23  ;3   ;Field     ;
                Name=StatementEndingBalance;
                CaptionML=[DAN=Kontoudtogs slutsaldo;
                           ENU=Statement Ending Balance];
                SourceExpr=BankAccReconciliation."Statement Ending Balance";
                AutoFormatType=1 }

  }
  CODE
  {
    VAR
      BankAccReconciliation@1000 : Record 273;
      AppliedPmtEntry@1007 : Record 1294;
      MatchDetails@1002 : Text;
      CannotAddMappingRulesForFIKLinesErr@1060000 : TextConst 'DAN=Du kan ikke bruge funktionen Knyt tekst til konto til betalinger af typen FIK.;ENU=You cannot use the Map Text to Account function for payments of type FIK.';
      CannotImportFIKLinesErr@1060001 : TextConst 'DAN=Du kan ikke importere FIK-kontoudtogsfiler til denne betalingsafstemningskladde, da den indeholder kladdelinjer for ikke-FIK-betalinger.\\Importér FIK-kontoudtogsfilen til en betalingsafstemningskladde, der er tom eller indeholder linjer for andre FIK-betalinger.;ENU=You cannot import FIK statement files into this payment reconciliation journal, because it contains journal lines for non-FIK payments.\\Import the FIK statement file into a payment reconciliation journal that is empty or contains lines for other FIK payments.';
      CannotImportStatementIntoFIKErr@1060002 : TextConst 'DAN=Du kan ikke importere bankkontoudtogsfiler for ikke-FIK-betalinger til en betalingsafstemningskladde, der allerede indeholder kladdelinjer for FIK-betalinger.;ENU=You cannot import bank statement files for non-FIK payments into a payment reconciliation journal that already contains journal lines for FIK payments.';
      PmtAppliedToTxt@1003 : TextConst 'DAN=Betalingen er afstemt med (%1) poster.;ENU=The payment has been applied to (%1) entries.';
      IsBankAccReconInitialized@1004 : Boolean;
      StatementToRemAmtDifference@1005 : Decimal;
      FinanceChargeMemoEnabled@1001 : Boolean;
      RemainingAmountAfterPosting@1006 : Decimal;
      RemoveExistingApplicationsQst@1008 : TextConst 'DAN=Når du kører handlingen Udlign automatisk, annulleres alle tidligere udligninger.\\Vil du fortsætte?;ENU=When you run the Apply Automatically action, it will undo all previous applications.\\Do you want to continue?';
      ShortcutDimCode@1013 : ARRAY [8] OF Code[20];

    LOCAL PROCEDURE UpdateFIKStatus@1060000();
    BEGIN
      IF BankAccReconciliation.GET("Statement Type","Bank Account No.","Statement No.") THEN
        IF COUNT = 0 THEN BEGIN
          BankAccReconciliation."FIK Payment Reconciliation" := FALSE;
          BankAccReconciliation.MODIFY;
        END;
    END;

    LOCAL PROCEDURE UpdateSorting@4(IsAscending@1003 : Boolean);
    VAR
      BankAccReconciliationLine@1005 : Record 274;
      PaymentMatchingDetails@1000 : Record 1299;
      AppliedPaymentEntry2@1002 : Record 1294;
      AmountDifference@1001 : Decimal;
      ScoreRange@1004 : Integer;
    BEGIN
      BankAccReconciliationLine.SETRANGE("Statement Type","Statement Type");
      BankAccReconciliationLine.SETRANGE("Bank Account No.","Bank Account No.");
      BankAccReconciliationLine.SETRANGE("Statement No.","Statement No.");
      BankAccReconciliationLine.SETAUTOCALCFIELDS("Match Confidence");

      IF BankAccReconciliationLine.FINDSET THEN BEGIN
        REPEAT
          ScoreRange := 10000;
          BankAccReconciliationLine."Sorting Order" := BankAccReconciliationLine."Match Confidence" * ScoreRange;

          // Update sorting for same match confidence based onother criteria
          GetAppliedPmtData(AppliedPaymentEntry2,RemainingAmountAfterPosting,AmountDifference,PmtAppliedToTxt);

          ScoreRange := ScoreRange / 10;
          IF AmountDifference <> 0 THEN
            BankAccReconciliationLine."Sorting Order" -= ScoreRange;

          ScoreRange := ScoreRange / 10;
          IF Difference <> 0 THEN
            BankAccReconciliationLine."Sorting Order" -= ScoreRange;

          ScoreRange := ScoreRange / 10;
          IF PaymentMatchingDetails.MergeMessages(Rec) <> '' THEN
            BankAccReconciliationLine."Sorting Order" -= ScoreRange;

          BankAccReconciliationLine.MODIFY;
        UNTIL BankAccReconciliationLine.NEXT = 0;

        IF  BankAccReconciliation."FIK Payment Reconciliation" THEN
          SETCURRENTKEY("Sorting Order","Transaction Text")
        ELSE
          SETCURRENTKEY("Sorting Order");

        ASCENDING(IsAscending);

        CurrPage.UPDATE(FALSE);
        FINDFIRST;
      END;
    END;

    BEGIN
    END.
  }
}

