OBJECT Codeunit 312 Cust-Check Cr. Limit
{
  OBJECT-PROPERTIES
  {
    Date=23-06-16;
    Time=12:00:00;
    Version List=NAVW19.00.00.46290;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DAN=Opdateringen er afbrudt på grund af advarslen.;ENU=The update has been interrupted to respect the warning.';
      CustCheckCreditLimit@1001 : Page 343;
      OK@1002 : Boolean;
      CustCrLimitConfirmQst@1005 : TextConst 'DAN=Debitorens kreditmaksimum er overskredet. Vil du stadig fortsætte?;ENU=The customer''s credit limit has been exceeded. Do you still want to continue?';

    PROCEDURE GenJnlLineCheck@1(GenJnlLine@1000 : Record 81);
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;

      IF CustCheckCreditLimit.GenJnlLineShowWarning(GenJnlLine) THEN BEGIN
        OK := CustCheckCreditLimit.RUNMODAL = ACTION::Yes;
        CLEAR(CustCheckCreditLimit);
        IF NOT OK THEN
          ERROR(Text000);
      END;
    END;

    PROCEDURE SalesHeaderCheck@2(SalesHeader@1000 : Record 36) CreditLimitExceeded : Boolean;
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;

      IF NOT CustCheckCreditLimit.SalesHeaderShowWarning(SalesHeader) THEN
        SalesHeader.OnCustomerCreditLimitNotExceeded
      ELSE BEGIN
        CreditLimitExceeded := TRUE;
        OK := CustCheckCreditLimit.RUNMODAL = ACTION::Yes;
        CLEAR(CustCheckCreditLimit);
        IF OK THEN
          SalesHeader.OnCustomerCreditLimitExceeded
        ELSE
          ERROR(Text000);
      END;
    END;

    PROCEDURE SalesLineCheck@3(SalesLine@1000 : Record 37);
    VAR
      SalesHeader@1001 : Record 36;
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;

      SalesHeader.GET(SalesLine."Document Type",SalesLine."Document No.");

      IF NOT CustCheckCreditLimit.SalesLineShowWarning(SalesLine) THEN
        SalesHeader.OnCustomerCreditLimitNotExceeded
      ELSE BEGIN
        OK := CustCheckCreditLimit.RUNMODAL = ACTION::Yes;
        CLEAR(CustCheckCreditLimit);
        IF OK THEN
          SalesHeader.OnCustomerCreditLimitExceeded
        ELSE
          ERROR(Text000);
      END;
    END;

    PROCEDURE ServiceHeaderCheck@5(ServiceHeader@1000 : Record 5900);
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;

      IF CustCheckCreditLimit.ServiceHeaderShowWarning(ServiceHeader) THEN BEGIN
        OK := CustCheckCreditLimit.RUNMODAL = ACTION::Yes;
        CLEAR(CustCheckCreditLimit);
        IF NOT OK THEN
          ERROR(Text000);
      END;
    END;

    PROCEDURE ServiceLineCheck@6(ServiceLine@1000 : Record 5902);
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;

      IF CustCheckCreditLimit.ServiceLineShowWarning(ServiceLine) THEN BEGIN
        OK := CustCheckCreditLimit.RUNMODAL = ACTION::Yes;
        CLEAR(CustCheckCreditLimit);
        IF NOT OK THEN
          ERROR(Text000);
      END;
    END;

    PROCEDURE ServiceContractHeaderCheck@7(ServiceContractHeader@1001 : Record 5965);
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;

      IF CustCheckCreditLimit.ServiceContractHeaderShowWarning(ServiceContractHeader) THEN BEGIN
        OK := CustCheckCreditLimit.RUNMODAL = ACTION::Yes;
        CLEAR(CustCheckCreditLimit);
        IF NOT OK THEN
          ERROR(Text000);
      END;
    END;

    PROCEDURE BlanketSalesOrderToOrderCheck@4(SalesOrderHeader@1000 : Record 36);
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;

      IF CustCheckCreditLimit.SalesHeaderShowWarning(SalesOrderHeader) THEN
        IF NOT CONFIRM(CustCrLimitConfirmQst) THEN
          ERROR('');
    END;

    BEGIN
    END.
  }
}

