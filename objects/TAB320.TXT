OBJECT Table 320 Tax Jurisdiction
{
  OBJECT-PROPERTIES
  {
    Date=23-09-13;
    Time=12:00:00;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    CaptionML=[DAN=Skatteregion;
               ENU=Tax Jurisdiction];
    LookupPageID=Page466;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[DAN=Kode;
                                                              ENU=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text50        ;CaptionML=[DAN=Beskrivelse;
                                                              ENU=Description] }
    { 3   ;   ;Tax Account (Sales) ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[DAN=Skattekonto (salg);
                                                              ENU=Tax Account (Sales)] }
    { 4   ;   ;Tax Account (Purchases);Code20     ;TableRelation="G/L Account";
                                                   CaptionML=[DAN=Skattekonto (køb);
                                                              ENU=Tax Account (Purchases)] }
    { 5   ;   ;Report-to Jurisdiction;Code10      ;TableRelation="Tax Jurisdiction";
                                                   CaptionML=[DAN=Indberetningsregion;
                                                              ENU=Report-to Jurisdiction] }
    { 6   ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[DAN=Datofilter;
                                                              ENU=Date Filter] }
    { 7   ;   ;Tax Group Filter    ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Tax Group";
                                                   CaptionML=[DAN=Skattegruppefilter;
                                                              ENU=Tax Group Filter] }
    { 8   ;   ;Unreal. Tax Acc. (Sales);Code20    ;TableRelation="G/L Account";
                                                   CaptionML=[DAN=Urealiseret skattekto. (salg);
                                                              ENU=Unreal. Tax Acc. (Sales)] }
    { 9   ;   ;Unreal. Tax Acc. (Purchases);Code20;TableRelation="G/L Account";
                                                   CaptionML=[DAN=Urealiseret skattekto. (køb);
                                                              ENU=Unreal. Tax Acc. (Purchases)] }
    { 10  ;   ;Reverse Charge (Purchases);Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[DAN=Modtagermoms (køb);
                                                              ENU=Reverse Charge (Purchases)] }
    { 11  ;   ;Unreal. Rev. Charge (Purch.);Code20;TableRelation="G/L Account";
                                                   CaptionML=[DAN=Urealiseret modtagermoms (køb);
                                                              ENU=Unreal. Rev. Charge (Purch.)] }
    { 12  ;   ;Unrealized VAT Type ;Option        ;OnValidate=BEGIN
                                                                IF "Unrealized VAT Type" > 0 THEN BEGIN
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Unrealized VAT",TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[DAN=Urealiseret moms - type;
                                                              ENU=Unrealized VAT Type];
                                                   OptionCaptionML=[DAN=" ,Procent,Først,Sidst,Først (betalt),Sidst (betalt)";
                                                                    ENU=" ,Percentage,First,Last,First (Fully Paid),Last (Fully Paid)"];
                                                   OptionString=[ ,Percentage,First,Last,First (Fully Paid),Last (Fully Paid)] }
    { 13  ;   ;Calculate Tax on Tax;Boolean       ;OnValidate=BEGIN
                                                                TaxDetail.SETRANGE("Tax Jurisdiction Code",Code);
                                                                TaxDetail.MODIFYALL("Calculate Tax on Tax","Calculate Tax on Tax");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[DAN=Beregn skatters-skat;
                                                              ENU=Calculate Tax on Tax] }
    { 14  ;   ;Adjust for Payment Discount;Boolean;OnValidate=BEGIN
                                                                IF "Adjust for Payment Discount" THEN BEGIN
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Adjust for Payment Disc.",TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[DAN=Reguler moms ved kontantrabat;
                                                              ENU=Adjust for Payment Discount] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Report-to Jurisdiction                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      TaxDetail@1001 : Record 322;

    PROCEDURE GetSalesAccount@4(Unrealized@1000 : Boolean) : Code[20];
    BEGIN
      IF Unrealized THEN BEGIN
        TESTFIELD("Unreal. Tax Acc. (Sales)");
        EXIT("Unreal. Tax Acc. (Sales)");
      END;
      TESTFIELD("Tax Account (Sales)");
      EXIT("Tax Account (Sales)");
    END;

    PROCEDURE GetPurchAccount@5(Unrealized@1000 : Boolean) : Code[20];
    BEGIN
      IF Unrealized THEN BEGIN
        TESTFIELD("Unreal. Tax Acc. (Purchases)");
        EXIT("Unreal. Tax Acc. (Purchases)");
      END;
      TESTFIELD("Tax Account (Purchases)");
      EXIT("Tax Account (Purchases)");
    END;

    PROCEDURE GetRevChargeAccount@6(Unrealized@1000 : Boolean) : Code[20];
    BEGIN
      IF Unrealized THEN BEGIN
        TESTFIELD("Unreal. Rev. Charge (Purch.)");
        EXIT("Unreal. Rev. Charge (Purch.)");
      END;
      TESTFIELD("Reverse Charge (Purchases)");
      EXIT("Reverse Charge (Purchases)");
    END;

    BEGIN
    END.
  }
}

