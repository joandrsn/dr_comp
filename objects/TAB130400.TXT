OBJECT Table 130400 CAL Test Suite
{
  OBJECT-PROPERTIES
  {
    Date=15-09-15;
    Time=12:00:00;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Name,Description;
    OnDelete=VAR
               CALTestLine@1000 : Record 130401;
             BEGIN
               CALTestLine.SETRANGE("Test Suite",Name);
               CALTestLine.DELETEALL(TRUE);
             END;

    CaptionML=[DAN=CAL Test Suite;
               ENU=CAL Test Suite];
    LookupPageID=Page130400;
  }
  FIELDS
  {
    { 1   ;   ;Name                ;Code10        ;CaptionML=[DAN=Name;
                                                              ENU=Name];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text30        ;CaptionML=[DAN=Description;
                                                              ENU=Description] }
    { 3   ;   ;Tests to Execute    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("CAL Test Line" WHERE (Test Suite=FIELD(Name),
                                                                                            Line Type=CONST(Function),
                                                                                            Run=CONST(Yes)));
                                                   CaptionML=[DAN=Tests to Execute;
                                                              ENU=Tests to Execute];
                                                   Editable=No }
    { 4   ;   ;Tests not Executed  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("CAL Test Line" WHERE (Test Suite=FIELD(Name),
                                                                                            Line Type=CONST(Function),
                                                                                            Run=CONST(Yes),
                                                                                            Result=CONST(" ")));
                                                   CaptionML=[DAN=Tests not Executed;
                                                              ENU=Tests not Executed];
                                                   Editable=No }
    { 5   ;   ;Failures            ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("CAL Test Line" WHERE (Test Suite=FIELD(Name),
                                                                                            Line Type=CONST(Function),
                                                                                            Run=CONST(Yes),
                                                                                            Result=CONST(Failure)));
                                                   CaptionML=[DAN=Failures;
                                                              ENU=Failures];
                                                   Editable=No }
    { 6   ;   ;Last Run            ;DateTime      ;CaptionML=[DAN=Last Run;
                                                              ENU=Last Run];
                                                   Editable=No }
    { 8   ;   ;Export              ;Boolean       ;CaptionML=[DAN=Export;
                                                              ENU=Export] }
    { 21  ;   ;Attachment          ;BLOB          ;CaptionML=[DAN=Attachment;
                                                              ENU=Attachment] }
    { 23  ;   ;Update Test Coverage Map;Boolean   ;CaptionML=[DAN=Update Test Coverage Map;
                                                              ENU=Update Test Coverage Map] }
  }
  KEYS
  {
    {    ;Name                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CouldNotExportErr@1005 : TextConst '@@@={Locked};DAN=Could not export Unit Test XML definition.;ENU=Could not export Unit Test XML definition.';
      UTTxt@1003 : TextConst '@@@={Locked};DAN=UT;ENU=UT';
      CALTestSuiteXML@1001 : XMLport 130400;
      CALTestResultsXML@1000 : XMLport 130401;

    PROCEDURE ExportTestSuiteSetup@1();
    VAR
      CALTestSuite@1000 : Record 130400;
      TempBlob@1004 : Record 99008535;
      FileMgt@1003 : Codeunit 419;
      OStream@1001 : OutStream;
    BEGIN
      TempBlob.Blob.CREATEOUTSTREAM(OStream);
      CALTestSuite.SETRANGE(Name,Name);

      CALTestSuiteXML.SETDESTINATION(OStream);
      CALTestSuiteXML.SETTABLEVIEW(CALTestSuite);

      IF NOT CALTestSuiteXML.EXPORT THEN
        ERROR(CouldNotExportErr);

      FileMgt.ServerTempFileName('*.xml');
      FileMgt.BLOBExport(TempBlob,UTTxt + Name,TRUE);
    END;

    PROCEDURE ImportTestSuiteSetup@2();
    VAR
      TempBlob@1002 : Record 99008535;
      FileMgt@1001 : Codeunit 419;
      IStream@1004 : InStream;
    BEGIN
      FileMgt.BLOBImport(TempBlob,'*.xml');
      TempBlob.Blob.CREATEINSTREAM(IStream);
      CALTestSuiteXML.SETSOURCE(IStream);
      CALTestSuiteXML.IMPORT;
    END;

    PROCEDURE ExportTestSuiteResult@4();
    VAR
      CALTestSuite@1000 : Record 130400;
      TempBlob@1004 : Record 99008535;
      FileMgt@1003 : Codeunit 419;
      OStream@1001 : OutStream;
    BEGIN
      TempBlob.Blob.CREATEOUTSTREAM(OStream);
      CALTestSuite.SETRANGE(Name,Name);

      CALTestResultsXML.SETDESTINATION(OStream);
      CALTestResultsXML.SETTABLEVIEW(CALTestSuite);

      IF NOT CALTestResultsXML.EXPORT THEN
        ERROR(CouldNotExportErr);

      FileMgt.ServerTempFileName('*.xml');
      FileMgt.BLOBExport(TempBlob,UTTxt + Name,TRUE);
    END;

    PROCEDURE ImportTestSuiteResult@3();
    VAR
      TempBlob@1002 : Record 99008535;
      FileMgt@1001 : Codeunit 419;
      IStream@1004 : InStream;
    BEGIN
      FileMgt.BLOBImport(TempBlob,'*.xml');
      TempBlob.Blob.CREATEINSTREAM(IStream);
      CALTestResultsXML.SETSOURCE(IStream);
      CALTestResultsXML.IMPORT;
    END;

    BEGIN
    END.
  }
}

