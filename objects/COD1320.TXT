OBJECT Codeunit 1320 Mini Lines Instruction Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=09-09-14;
    Time=12:00:00;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OptionsStringQst@1000 : TextConst 'DAN=Vis denne instruktion igen,Vis ikke igen;ENU=Show this instruction again,Do not show again';
      CreateNewLineInstructionTxt@1001 : TextConst 'DAN=Hvis du vil sælge et produkt, skal du først vælge en lagervare eller en service i feltet Varenr.\\Hvis du vil tilføje en meddelelse til kunden, skal du redigere beskrivelsen af produktet i feltet Beskrivelse/bemærkning eller tilføje din meddelelse på en ny linje, hvor feltet Varenr. er tomt.;ENU=To sell a product, you must first select an inventory item or a service in the Item No. field.\\To add a message to the customer, in the Description/Comment field, edit the description of the product or on a new line where the Item No. field is empty, add your message.';
      LinesMissingQuantityErr@1002 : TextConst 'DAN=En eller flere dokumentlinjer med en værdi i feltet Varenr. har ikke angivet et antal.;ENU=One or more document lines with a value in the Item No. field do not have a quantity specified.';

    PROCEDURE ShowCreateLineInstruction@5(ItemNo@1000 : Code[20]);
    BEGIN
      IF (ItemNo = '') AND GUIALLOWED AND IsEnabled THEN
        IF STRMENU(OptionsStringQst,1,CreateNewLineInstructionTxt) = 2 THEN
          DisableMessageForCurrentUser;
    END;

    PROCEDURE DisableMessageForCurrentUser@4();
    VAR
      MiniUserRemovedInstructions@1000 : Record 1306;
    BEGIN
      MiniUserRemovedInstructions.DisableInstruction(GetInstructionCode);
    END;

    PROCEDURE SalesCheckAllLinesHaveQuantityAssigned@3(SalesHeader@1000 : Record 36);
    VAR
      SalesLine@1001 : Record 37;
    BEGIN
      SalesLine.SETRANGE("Document No.",SalesHeader."No.");
      SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");

      IF SalesLine.FINDSET THEN
        REPEAT
          IF (SalesLine."No." <> '') AND (SalesLine.Quantity = 0) THEN
            ERROR(LinesMissingQuantityErr);
        UNTIL SalesLine.NEXT = 0;
    END;

    PROCEDURE PurchaseCheckAllLinesHaveQuantityAssigned@6(PurchaseHeader@1000 : Record 38);
    VAR
      PurchaseLine@1001 : Record 39;
    BEGIN
      PurchaseLine.SETRANGE("Document No.",PurchaseHeader."No.");
      PurchaseLine.SETRANGE("Document Type",PurchaseHeader."Document Type");

      IF PurchaseLine.FINDSET THEN
        REPEAT
          IF (PurchaseLine."No." <> '') AND (PurchaseLine.Quantity = 0) THEN
            ERROR(LinesMissingQuantityErr);
        UNTIL PurchaseLine.NEXT = 0;
    END;

    LOCAL PROCEDURE IsEnabled@1() : Boolean;
    VAR
      MiniUserRemovedInstructions@1000 : Record 1306;
    BEGIN
      EXIT(NOT MiniUserRemovedInstructions.GET(USERID,GetInstructionCode));
    END;

    LOCAL PROCEDURE GetInstructionCode@2() : Code[20];
    BEGIN
      EXIT('LINESINSTRUCTION');
    END;

    BEGIN
    END.
  }
}

